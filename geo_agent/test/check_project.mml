Layer:
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, way_pixels,\n    COALESCE(wetland, landuse, \"natural\"\
      ) AS feature\n  FROM (SELECT\n      way,\n      ('landuse_' || (CASE WHEN landuse\
      \ IN ('forest', 'farmland', 'residential', 'commercial', 'retail', 'industrial',\n\
      \                                            'meadow', 'grass', 'village_green',\
      \ 'vineyard', 'orchard') THEN landuse END)) AS landuse,\n      ('natural_' ||\
      \ (CASE WHEN \"natural\" IN ('wood', 'sand', 'scree', 'shingle', 'bare_rock',\
      \ 'heath', 'grassland', 'scrub') THEN \"natural\" END)) AS \"natural\",\n  \
      \    ('wetland_' || (CASE WHEN \"natural\" IN ('wetland', 'mud') THEN (CASE\
      \ WHEN \"natural\" IN ('mud') THEN \"natural\" ELSE tags->'wetland' END) END))\
      \ AS wetland,\n      way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n      way_area\n    FROM planet_osm_polygon\n    WHERE (landuse\
      \ IN ('forest', 'farmland', 'residential', 'commercial', 'retail', 'industrial',\
      \ 'meadow', 'grass', 'village_green', 'vineyard', 'orchard')\n      OR \"natural\"\
      \ IN ('wood', 'wetland', 'mud', 'sand', 'scree', 'shingle', 'bare_rock', 'heath',\
      \ 'grassland', 'scrub'))\n      AND way_area > 0.01*!pixel_width!::real*!pixel_height!::real\n\
      \      AND building IS NULL\n  ) AS features\n  ORDER BY way_area DESC, feature\n\
      ) AS landcover_low_zoom"
    type: postgis
  extent: &id001
  - -180
  - -85.05112877980659
  - 180
  - 85.05112877980659
  geometry: polygon
  id: landcover-low-zoom
  properties:
    cache-features: true
    maxzoom: 9
    minzoom: 5
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, name, religion, way_pixels, is_building,\n    COALESCE(aeroway,\
      \ amenity, wetland, power, landuse, leisure, man_made, \"natural\", shop, tourism,\
      \ highway, railway) AS feature\n  FROM (SELECT\n      way, COALESCE(name, '')\
      \ AS name,\n      ('aeroway_' || (CASE WHEN aeroway IN ('apron', 'aerodrome')\
      \ THEN aeroway END)) AS aeroway,\n      ('amenity_' || (CASE WHEN amenity IN\
      \ ('bicycle_parking', 'motorcycle_parking', 'university', 'college', 'school',\
      \ 'taxi',\n                                            'hospital', 'kindergarten',\
      \ 'grave_yard', 'prison', 'place_of_worship', 'clinic', 'ferry_terminal',\n\
      \                                            'marketplace', 'community_centre',\
      \ 'social_facility', 'arts_centre', 'parking_space', 'bus_station',\n      \
      \                                      'fire_station', 'police')\n         \
      \             OR amenity IN ('parking') AND (tags->'parking' NOT IN ('underground')\
      \ OR (tags->'parking') IS NULL) THEN amenity END)) AS amenity,\n      ('landuse_'\
      \ || (CASE WHEN landuse IN ('quarry', 'vineyard', 'orchard', 'cemetery', 'residential',\
      \ 'garages', 'meadow', 'grass',\n                                          \
      \  'allotments', 'forest', 'farmyard', 'farmland', 'greenhouse_horticulture',\n\
      \                                            'recreation_ground', 'village_green',\
      \ 'retail', 'industrial', 'railway', 'commercial',\n                       \
      \                     'brownfield', 'landfill', 'salt_pond', 'construction',\
      \ 'plant_nursery', 'religious') THEN landuse END)) AS landuse,\n      ('shop_'\
      \ || (CASE WHEN shop IN ('mall') AND (tags->'location' NOT IN ('underground')\
      \ OR (tags->'location') IS NULL) THEN shop END)) AS shop,\n      ('leisure_'\
      \ || (CASE WHEN leisure IN ('swimming_pool', 'playground', 'park', 'recreation_ground',\
      \ 'garden',\n                                            'golf_course', 'miniature_golf',\
      \ 'sports_centre', 'stadium', 'pitch', 'ice_rink',\n                       \
      \                     'track', 'dog_park', 'fitness_station', 'water_park')\
      \ THEN leisure END)) AS leisure,\n      ('man_made_' || (CASE WHEN man_made\
      \ IN ('works', 'wastewater_plant', 'water_works') THEN man_made END)) AS man_made,\n\
      \      ('natural_' || (CASE WHEN \"natural\" IN ('beach', 'shoal', 'heath',\
      \ 'grassland', 'wood', 'sand', 'scree', 'shingle', 'bare_rock', 'scrub') THEN\
      \ \"natural\" END)) AS \"natural\",\n      ('wetland_' || (CASE WHEN \"natural\"\
      \ IN ('wetland', 'mud') THEN (CASE WHEN \"natural\" = 'mud' THEN \"natural\"\
      \ ELSE tags->'wetland' END) END)) AS wetland,\n      ('power_' || (CASE WHEN\
      \ power IN ('plant', 'substation', 'generator') THEN power END)) AS power,\n\
      \      ('tourism_' || (CASE WHEN tourism IN ('camp_site', 'caravan_site', 'picnic_site')\
      \ THEN tourism END)) AS tourism,\n      ('highway_' || (CASE WHEN highway IN\
      \ ('services', 'rest_area') THEN highway END)) AS highway,\n      ('railway_'\
      \ || (CASE WHEN railway = 'station' THEN railway END)) AS railway,\n      CASE\
      \ WHEN religion IN ('christian', 'jewish', 'muslim') THEN religion ELSE 'INT-generic'::text\
      \ END AS religion,\n      way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n      CASE WHEN building = 'no' OR building IS NULL THEN 'no'\
      \ ELSE 'yes' END AS is_building,\n      way_area\n    FROM planet_osm_polygon\n\
      \    WHERE (landuse IS NOT NULL\n      OR leisure IS NOT NULL\n      OR aeroway\
      \ IN ('apron', 'aerodrome')\n      OR amenity IN ('parking', 'bicycle_parking',\
      \ 'motorcycle_parking', 'taxi', 'university', 'college', 'school', 'hospital',\
      \ 'kindergarten',\n                     'grave_yard', 'place_of_worship', 'prison',\
      \ 'clinic', 'ferry_terminal', 'marketplace', 'community_centre', 'social_facility',\n\
      \                     'arts_centre', 'parking_space', 'bus_station', 'fire_station',\
      \ 'police')\n      OR man_made IN ('works', 'wastewater_plant','water_works')\n\
      \      OR \"natural\" IN ('beach', 'shoal', 'heath', 'mud', 'wetland', 'grassland',\
      \ 'wood', 'sand', 'scree', 'shingle', 'bare_rock', 'scrub')\n      OR power\
      \ IN ('plant', 'substation', 'generator')\n      OR shop IN ('mall')\n     \
      \ OR tourism IN ('camp_site', 'caravan_site', 'picnic_site')\n      OR highway\
      \ IN ('services', 'rest_area')\n      OR railway = 'station')\n      AND way_area\
      \ > 1*!pixel_width!::real*!pixel_height!::real\n  ) AS landcover\n  ORDER BY\
      \ way_area DESC, feature\n) AS features"
    type: postgis
  extent: *id001
  geometry: polygon
  id: landcover
  properties:
    cache-features: true
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE man_made = 'cutline'\n\
      ) AS landcover_line"
    type: postgis
  extent: *id001
  geometry: linestring
  id: landcover-line
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM icesheet_polygons\n) AS icesheet_polygons"
    type: postgis
  extent: *id001
  geometry: polygon
  id: icesheet-poly
  properties:
    minzoom: 5
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway,\n    CASE WHEN tags->'intermittent' IN\
      \ ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn',\
      \ 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n\
      \    CASE WHEN tunnel IN ('yes', 'culvert')\n      OR waterway='canal' AND tunnel\
      \ = 'flooded'\n      THEN 'yes' ELSE 'no' END AS int_tunnel\n  FROM planet_osm_line\n\
      \  WHERE waterway IN ('stream', 'drain', 'ditch')\n) AS water_lines_casing"
    type: postgis
  extent: *id001
  geometry: linestring
  id: water-lines-casing
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway,\n    CASE WHEN tags->'intermittent' IN\
      \ ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn',\
      \ 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent\n\
      \  FROM planet_osm_line\n  WHERE waterway = 'river'\n) AS water_lines_low_zoom"
    type: postgis
  extent: *id001
  geometry: linestring
  id: water-lines-low-zoom
  properties:
    maxzoom: 11
    minzoom: 8
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway,\n    name,\n    CASE WHEN tags->'intermittent'\
      \ IN ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn',\
      \ 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n\
      \    CASE WHEN tunnel IN ('yes', 'culvert')\n      OR waterway = 'canal' AND\
      \ tunnel = 'flooded'\n      THEN 'yes' ELSE 'no' END AS int_tunnel,\n    'no'\
      \ AS bridge\n  FROM planet_osm_line\n  WHERE waterway IN ('river', 'canal',\
      \ 'stream', 'drain', 'ditch')\n    AND (bridge IS NULL OR bridge NOT IN ('yes',\
      \ 'aqueduct'))\n  ORDER BY COALESCE(layer,0)\n) AS water_lines"
    type: postgis
  extent: *id001
  geometry: linestring
  id: water-lines
  properties:
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    \"natural\",\n    waterway,\n    landuse,\n   \
      \ way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels,\n\
      \    CASE WHEN tags->'intermittent' IN ('yes')\n      OR tags->'seasonal' IN\
      \ ('yes', 'spring', 'summer', 'autumn', 'winter', 'wet_season', 'dry_season')\n\
      \      OR tags->'basin' IN ('detention', 'infiltration')\n      THEN 'yes' ELSE\
      \ 'no' END AS int_intermittent\n  FROM planet_osm_polygon\n  WHERE\n    (waterway\
      \ IN ('dock', 'riverbank')\n      OR landuse IN ('reservoir', 'basin')\n   \
      \   OR \"natural\" IN ('water', 'glacier'))\n    AND building IS NULL\n    AND\
      \ way_area > 1*!pixel_width!::real*!pixel_height!::real\n  ORDER BY COALESCE(layer,0),\
      \ way_area DESC\n) AS water_areas"
    type: postgis
  extent: *id001
  geometry: polygon
  id: water-areas
  properties:
    cache-features: true
    minzoom: 0
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM simplified_water_polygons\n) AS ocean_lz"
    type: postgis
  extent: *id001
  geometry: polygon
  id: ocean-lz
  properties:
    maxzoom: 9
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM water_polygons\n) AS ocean"
    type: postgis
  extent: *id001
  geometry: polygon
  id: ocean
  properties:
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, surface,\n    COALESCE(CASE WHEN landuse = 'forest'\
      \ THEN 'wood' END, \"natural\") AS \"natural\",\n    CASE WHEN \"natural\" =\
      \ 'mud'\n        THEN \"natural\"\n        ELSE CASE WHEN (\"natural\" = 'wetland'\
      \ AND NOT tags ? 'wetland')\n          THEN 'wetland'\n          ELSE CASE WHEN\
      \ (\"natural\" = 'wetland')\n            THEN tags->'wetland'\n            END\n\
      \        END\n      END AS int_wetland,\n    landuse,\n    tags->'leaf_type'\
      \ AS leaf_type,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (\"natural\" IN ('mud',\
      \ 'wetland', 'wood', 'beach', 'shoal', 'reef', 'scrub') OR landuse IN ('forest',\
      \ 'salt_pond'))\n    AND building IS NULL\n    AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n\
      \  ORDER BY COALESCE(layer,0), way_area DESC\n) AS landcover_area_symbols"
    type: postgis
  extent: *id001
  geometry: polygon
  id: landcover-area-symbols
  properties:
    cache-features: true
    minzoom: 9
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    ice_edge\n  FROM icesheet_outlines\n) AS icesheet_outlines"
    type: postgis
  extent: *id001
  geometry: linestring
  id: icesheet-outlines
  properties:
    minzoom: 5
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_polygon\n  WHERE leisure = 'marina'\n\
      ) AS marinas_area"
    type: postgis
  extent: *id001
  geometry: polygon
  id: marinas-area
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway\n  FROM planet_osm_line\n  WHERE waterway\
      \ IN ('dam', 'weir', 'lock_gate')\n) AS water_barriers_line"
    type: postgis
  extent: *id001
  geometry: linestring
  id: water-barriers-line
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway\n  FROM planet_osm_polygon\n  WHERE waterway\
      \ IN ('dam', 'weir', 'lock_gate')\n) AS water_barriers_poly"
    type: postgis
  extent: *id001
  geometry: polygon
  id: water-barriers-poly
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, man_made\n  FROM planet_osm_polygon\n  WHERE man_made\
      \ IN ('pier', 'breakwater', 'groyne')\n) AS piers_poly"
    type: postgis
  extent: *id001
  geometry: polygon
  id: piers-poly
  properties:
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, man_made\n  FROM planet_osm_line\n  WHERE man_made IN\
      \ ('pier', 'breakwater', 'groyne')\n) AS piers_line"
    type: postgis
  extent: *id001
  geometry: linestring
  id: piers-line
  properties:
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, waterway\n  FROM planet_osm_point\n  WHERE waterway\
      \ IN ('dam', 'weir', 'lock_gate')\n) AS water_barriers_points"
    type: postgis
  extent: *id001
  geometry: point
  id: water-barriers-point
  properties:
    minzoom: 17
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    man_made\n  FROM planet_osm_polygon\n  WHERE man_made\
      \ = 'bridge'\n) AS bridge"
    type: postgis
  extent: *id001
  geometry: polygon
  id: bridge
  properties:
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    building,\n    amenity,\n    aeroway,\n    aerialway,\n\
      \    tags->'public_transport' as public_transport\n  FROM planet_osm_polygon\n\
      \  WHERE building IS NOT NULL\n    AND building != 'no'\n    AND way_area >\
      \ 1*!pixel_width!::real*!pixel_height!::real\n  ORDER BY COALESCE(layer,0),\
      \ way_area DESC\n) AS buildings"
    type: postgis
  extent: *id001
  geometry: polygon
  id: buildings
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link',\
      \ 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link')\
      \ THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n\
      \    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n   \
      \ access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM\
      \ ( -- subselect that contains both roads and rail\n    SELECT\n        way,\n\
      \        'highway_' || highway AS feature, --only motorway to tertiary links\
      \ are accepted later on\n        horse,\n        foot,\n        bicycle,\n \
      \       tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt',\
      \ 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n    \
      \                          'mud', 'pebblestone', 'salt', 'sand', 'woodchips',\
      \ 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved',\
      \ 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n\
      \                              'concrete:plates', 'paving_stones', 'metal',\
      \ 'wood', 'unhewn_cobblestone') THEN 'paved'\n        END AS int_surface,\n\
      \        CASE WHEN access IN ('destination') THEN 'destination'::text\n    \
      \      WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS access,\n\
      \        construction,\n        CASE\n          WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n\
      \        END AS service,\n        CASE\n          WHEN highway IN ('motorway_link',\
      \ 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes'\n\
      \          ELSE 'no'\n        END AS link,\n        COALESCE(layer,0) AS layernotnull,\n\
      \        z_order\n      FROM planet_osm_line\n      WHERE (tunnel = 'yes' OR\
      \ tunnel = 'building_passage' OR covered = 'yes')\n        AND highway IS NOT\
      \ NULL -- end of road select\n    UNION ALL\n    SELECT\n        way,\n    \
      \    'railway_' || (CASE WHEN railway = 'preserved' AND service IN ('spur',\
      \ 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n                       \
      \  WHEN (railway = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n\
      \                         WHEN (railway = 'tram' AND service IN ('spur', 'siding',\
      \ 'yard')) THEN 'tram-service'\n                         ELSE railway END) AS\
      \ feature,\n        horse,\n        foot,\n        bicycle,\n        tracktype,\n\
      \        'null',\n        CASE\n          WHEN access IN ('destination') THEN\
      \ 'destination'::text\n          WHEN access IN ('no', 'private') THEN 'no'::text\n\
      \        END AS access,\n        construction,\n        CASE WHEN service IN\
      \ ('parking_aisle', 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE\
      \ 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0)\
      \ AS layernotnull,\n        z_order\n      FROM planet_osm_line\n      WHERE\
      \ (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes')\n     \
      \   AND (railway NOT IN ('platform') AND railway IS NOT NULL) -- end of rail\
      \ select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n \
      \   CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n   \
      \ CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard',\
      \ 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no',\
      \ 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE\
      \ WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END\n) AS tunnels"
    type: postgis
  extent: *id001
  geometry: linestring
  id: tunnels
  properties:
    cache-features: true
    group-by: layernotnull
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    landuse,\n    military,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (landuse = 'military'\n\
      \    OR military = 'danger_area')\n    AND building IS NULL\n) AS landuse_overlay"
    type: postgis
  extent: *id001
  geometry: polygon
  id: landuse-overlay
  properties:
    minzoom: 8
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    tourism\n  FROM planet_osm_polygon\n  WHERE tourism =\
      \ 'theme_park'\n    OR tourism = 'zoo'\n) AS tourism_boundary"
    type: postgis
  extent: *id001
  geometry: polygon
  id: tourism-boundary
  properties:
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, COALESCE(historic, barrier) AS feature\n  FROM\n   \
      \ (SELECT way,\n      ('barrier_' || (CASE WHEN barrier IN ('chain', 'city_wall',\
      \ 'ditch', 'fence', 'guard_rail',\n            'handrail', 'hedge', 'retaining_wall',\
      \ 'wall') THEN barrier END)) AS barrier,\n      ('historic_' || (CASE WHEN historic\
      \ = 'citywalls' THEN historic END)) AS historic\n      FROM\n        (SELECT\n\
      \            way,\n            historic,\n            barrier,\n           \
      \ waterway\n          FROM planet_osm_polygon\n          WHERE way && !bbox!\n\
      \        UNION ALL\n        SELECT\n            way,\n            historic,\n\
      \            barrier,\n            waterway\n          FROM planet_osm_line\n\
      \          WHERE way && !bbox!\n        ) _\n      WHERE barrier IN ('chain',\
      \ 'city_wall', 'ditch', 'fence', 'guard_rail',\n          'handrail', 'hedge',\
      \ 'retaining_wall', 'wall')\n      OR historic = 'citywalls'\n      AND (waterway\
      \ IS NULL OR waterway NOT IN ('river', 'canal', 'stream', 'drain', 'ditch'))\n\
      \  ) AS features\n) AS line_barriers"
    type: postgis
  extent: *id001
  geometry: linestring
  id: barriers
  properties:
    minzoom: 15
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, \"natural\", man_made\n  FROM planet_osm_line\n  WHERE\
      \ \"natural\" IN ('arete', 'cliff', 'ridge') OR man_made = 'embankment'\n) AS\
      \ cliffs"
    type: postgis
  extent: *id001
  geometry: linestring
  id: cliffs
  properties:
    cache-features: true
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE route = 'ferry'\n  \
      \  AND osm_id > 0\n) AS ferry_routes"
    type: postgis
  extent: *id001
  geometry: linestring
  id: ferry-routes
  properties:
    minzoom: 8
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT DISTINCT ON (p.way)\n    p.way AS way, l.highway AS int_tc_type,\n\
      \    CASE WHEN l.service IN ('parking_aisle', 'drive-through', 'driveway')\n\
      \      THEN 'INT-minor'::text\n      ELSE 'INT-normal'::text\n    END AS int_tc_service\n\
      \  FROM planet_osm_point p\n    JOIN planet_osm_line l\n      ON ST_DWithin(p.way,\
      \ l.way, 0.1) -- Assumes Mercator\n    JOIN (VALUES\n      ('tertiary', 1),\n\
      \      ('unclassified', 2),\n      ('residential', 3),\n      ('living_street',\
      \ 4),\n      ('service', 5),\n      ('track', 6)\n      ) AS v (highway, prio)\n\
      \      ON v.highway=l.highway\n  WHERE p.highway = 'turning_circle'\n    OR\
      \ p.highway = 'turning_loop'\n  ORDER BY p.way, v.prio\n) AS turning_circle_sql"
    type: postgis
  extent: *id001
  geometry: point
  id: turning-circle-casing
  properties:
    minzoom: 15
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    COALESCE((\n      'highway_' || (CASE WHEN highway\
      \ IN ('pedestrian', 'footway', 'service', 'platform') THEN highway END)),\n\
      \      ('railway_' || (CASE WHEN (railway IN ('platform')\n                \
      \      AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS\
      \ NULL)\n                      AND (tunnel NOT IN ('yes', 'building_passage')\
      \ OR tunnel IS NULL)\n                      AND (covered NOT IN ('yes') OR covered\
      \ IS NULL))\n                      THEN railway END))\n    ) AS feature\n  FROM\
      \ planet_osm_polygon\n  WHERE highway IN ('pedestrian', 'footway', 'service',\
      \ 'platform')\n    OR (railway IN ('platform')\n        AND (tags->'location'\
      \ NOT IN ('underground') OR (tags->'location') IS NULL)\n        AND (tunnel\
      \ NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n        AND (covered\
      \ NOT IN ('yes') OR covered IS NULL))\n  ORDER BY COALESCE(layer,0), way_area\
      \ DESC\n) AS highway_area_casing"
    type: postgis
  extent: *id001
  geometry: polygon
  id: highway-area-casing
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link',\
      \ 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link')\
      \ THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n\
      \    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n   \
      \ access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM\
      \ ( -- subselect that contains both roads and rail/aero\n    SELECT\n      \
      \  way,\n        ('highway_' || highway) AS feature, --only motorway to tertiary\
      \ links are accepted later on\n        horse,\n        foot,\n        bicycle,\n\
      \        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt',\
      \ 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n    \
      \                          'mud', 'pebblestone', 'salt', 'sand', 'woodchips',\
      \ 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved',\
      \ 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n\
      \                              'concrete:plates', 'paving_stones', 'metal',\
      \ 'wood', 'unhewn_cobblestone') THEN 'paved'\n        END AS int_surface,\n\
      \        CASE WHEN access IN ('destination') THEN 'destination'::text\n    \
      \      WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS access,\n\
      \        construction,\n        CASE\n          WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text\n\
      \          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n\
      \          WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link',\
      \ 'tertiary_link') THEN 'yes'\n          ELSE 'no'\n        END AS link,\n \
      \       COALESCE(layer,0) AS layernotnull,\n        osm_id,\n        z_order\n\
      \      FROM planet_osm_line\n      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes',\
      \ 'building_passage'))\n        AND (covered IS NULL OR NOT covered = 'yes')\n\
      \        AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever',\
      \ 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))\n     \
      \   AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n\
      \        way,\n        ('railway_' || (CASE WHEN railway = 'preserved' AND service\
      \ IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n           \
      \                  WHEN (railway = 'rail' AND service IN ('spur', 'siding',\
      \ 'yard')) THEN 'INT-spur-siding-yard'\n                             WHEN (railway\
      \ = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n\
      \                             ELSE railway END)) AS feature,\n        horse,\n\
      \        foot,\n        bicycle,\n        tracktype,\n        'null',\n    \
      \    CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n\
      \          WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS\
      \ access,\n        construction,\n        CASE WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text\
      \ ELSE 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0)\
      \ AS layernotnull,\n        osm_id,\n        z_order\n      FROM planet_osm_line\n\
      \      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n\
      \        AND (covered IS NULL OR NOT covered = 'yes')\n        AND (bridge IS\
      \ NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing',\
      \ 'movable', 'trestle', 'viaduct'))\n        AND railway IS NOT NULL -- end\
      \ of rail select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n\
      \    CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n  \
      \  CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard',\
      \ 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no',\
      \ 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE\
      \ WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END,\n    osm_id\n) AS roads_sql"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-casing
  properties:
    cache-features: true
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    COALESCE(\n      ('highway_' || (CASE WHEN highway\
      \ IN ('pedestrian', 'footway', 'service', 'living_street',\n               \
      \                             'platform', 'services') THEN highway END)),\n\
      \      ('railway_' || (CASE WHEN (railway IN ('platform')\n                \
      \      AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS\
      \ NULL)\n                      AND (tunnel NOT IN ('yes', 'building_passage')\
      \ OR tunnel IS NULL)\n                      AND (covered NOT IN ('yes') OR covered\
      \ IS NULL))\n                      THEN railway END)),\n      (('aeroway_' ||\
      \ CASE WHEN aeroway IN ('runway', 'taxiway', 'helipad') THEN aeroway END))\n\
      \    ) AS feature\n  FROM planet_osm_polygon\n  WHERE highway IN ('pedestrian',\
      \ 'footway', 'service', 'living_street', 'platform', 'services')\n    OR (railway\
      \ IN ('platform')\n        AND (tags->'location' NOT IN ('underground') OR (tags->'location')\
      \ IS NULL)\n        AND (tunnel NOT IN ('yes', 'building_passage') OR tunnel\
      \ IS NULL)\n        AND (covered NOT IN ('yes') OR covered IS NULL))\n    OR\
      \ aeroway IN ('runway', 'taxiway', 'helipad')\n  ORDER BY COALESCE(layer,0),\
      \ way_area desc\n) AS highway_area_fill"
    type: postgis
  extent: *id001
  id: highway-area-fill
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link',\
      \ 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link')\
      \ THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n\
      \    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n   \
      \ access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM\
      \ ( -- subselect that contains both roads and rail/aero\n    SELECT\n      \
      \  way,\n        ('highway_' || highway) AS feature, --only motorway to tertiary\
      \ links are accepted later on\n        horse,\n        foot,\n        bicycle,\n\
      \        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt',\
      \ 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n    \
      \                          'mud', 'pebblestone', 'salt', 'sand', 'woodchips',\
      \ 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved',\
      \ 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n\
      \                              'concrete:plates', 'paving_stones', 'metal',\
      \ 'wood', 'unhewn_cobblestone') THEN 'paved'\n        END AS int_surface,\n\
      \        CASE WHEN access IN ('destination') THEN 'destination'::text\n    \
      \      WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS access,\n\
      \        construction,\n        CASE\n          WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text\n\
      \          ELSE 'INT-normal'::text\n        END AS service,\n        CASE\n\
      \          WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link',\
      \ 'tertiary_link') THEN 'yes'\n          ELSE 'no'\n        END AS link,\n \
      \       COALESCE(layer,0) AS layernotnull,\n        osm_id,\n        z_order\n\
      \      FROM planet_osm_line\n      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes',\
      \ 'building_passage'))\n        AND (covered IS NULL OR NOT covered = 'yes')\n\
      \        AND (bridge IS NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever',\
      \ 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct'))\n     \
      \   AND highway IS NOT NULL -- end of road select\n    UNION ALL\n    SELECT\n\
      \        way,\n        ('railway_' || (CASE WHEN railway = 'preserved' AND service\
      \ IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n           \
      \                  WHEN (railway = 'rail' AND service IN ('spur', 'siding',\
      \ 'yard')) THEN 'INT-spur-siding-yard'\n                             WHEN (railway\
      \ = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n\
      \                             ELSE railway END)) AS feature,\n        horse,\n\
      \        foot,\n        bicycle,\n        tracktype,\n        'null',\n    \
      \    CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n\
      \          WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS\
      \ access,\n        construction,\n        CASE WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') OR leisure IN ('slipway') THEN 'INT-minor'::text\
      \ ELSE 'INT-normal'::text END AS service,\n        'no' AS link,\n        COALESCE(layer,0)\
      \ AS layernotnull,\n        osm_id,\n        z_order\n      FROM planet_osm_line\n\
      \      WHERE (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n\
      \        AND (covered IS NULL OR NOT covered = 'yes')\n        AND (bridge IS\
      \ NULL OR NOT bridge IN ('yes', 'boardwalk', 'cantilever', 'covered', 'low_water_crossing',\
      \ 'movable', 'trestle', 'viaduct'))\n        AND railway IS NOT NULL -- end\
      \ of rail select\n    ) AS features\n  ORDER BY\n    layernotnull,\n    z_order,\n\
      \    CASE WHEN substring(feature for 8) = 'railway_' THEN 2 ELSE 1 END,\n  \
      \  CASE WHEN feature IN ('railway_INT-preserved-ssy', 'railway_INT-spur-siding-yard',\
      \ 'railway_tram-service') THEN 0 ELSE 1 END,\n    CASE WHEN access IN ('no',\
      \ 'private') THEN 0 WHEN access IN ('destination') THEN 1 ELSE 2 END,\n    CASE\
      \ WHEN int_surface IN ('unpaved') THEN 0 ELSE 2 END,\n    osm_id\n) AS roads_sql"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-fill
  properties:
    cache-features: true
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT DISTINCT ON (p.way)\n    p.way AS way, l.highway AS int_tc_type,\n\
      \    CASE WHEN l.service IN ('parking_aisle', 'drive-through', 'driveway')\n\
      \      THEN 'INT-minor'::text\n      ELSE 'INT-normal'::text\n    END AS int_tc_service\n\
      \  FROM planet_osm_point p\n    JOIN planet_osm_line l\n      ON ST_DWithin(p.way,\
      \ l.way, 0.1) -- Assumes Mercator\n    JOIN (VALUES\n      ('tertiary', 1),\n\
      \      ('unclassified', 2),\n      ('residential', 3),\n      ('living_street',\
      \ 4),\n      ('service', 5),\n      ('track', 6)\n      ) AS v (highway, prio)\n\
      \      ON v.highway=l.highway\n  WHERE p.highway = 'turning_circle'\n    OR\
      \ p.highway = 'turning_loop'\n  ORDER BY p.way, v.prio\n) AS turning_circle_sql"
    type: postgis
  extent: *id001
  geometry: point
  id: turning-circle-fill
  properties:
    minzoom: 15
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    aerialway,\n    man_made,\n    tags->'substance'\
      \ AS substance\n  FROM planet_osm_line\n  WHERE aerialway IS NOT NULL\n    OR\
      \ (man_made = 'pipeline'\n        AND tags-> 'location' IN ('overground', 'overhead',\
      \ 'surface', 'outdoor')\n        OR bridge IN ('yes', 'aqueduct', 'cantilever',\
      \ 'covered', 'trestle', 'viaduct'))\n    OR (man_made = 'goods_conveyor'\n \
      \       AND (tags->'location' NOT IN ('underground') OR (tags->'location') IS\
      \ NULL)\n        AND (tunnel NOT IN ('yes') OR tunnel IS NULL))\n  ORDER BY\n\
      \    CASE\n      WHEN man_made IN ('goods_conveyor', 'pipeline') THEN 1\n  \
      \    WHEN tags-> 'location' = 'overhead' THEN 2\n      WHEN bridge IS NOT NULL\
      \ THEN 3\n      WHEN aerialway IS NOT NULL THEN 4\n    END\n) AS aerialways"
    type: postgis
  extent: *id001
  geometry: linestring
  id: aerialways
  properties:
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    COALESCE(\n      ('highway_' || (CASE WHEN highway\
      \ IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link')\n\
      \                             THEN substr(highway, 0, length(highway)-4) ELSE\
      \ highway end)),\n      ('railway_' || (CASE WHEN (railway = 'rail' AND service\
      \ IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n             \
      \              WHEN railway IN ('rail', 'tram', 'light_rail', 'funicular', 'narrow_gauge')\
      \ THEN railway END))\n    ) AS feature,\n    CASE WHEN tunnel = 'yes' OR tunnel\
      \ = 'building_passage' OR covered = 'yes' THEN 'yes' ELSE 'no' END AS int_tunnel,\n\
      \    CASE WHEN highway IN ('motorway_link', 'trunk_link', 'primary_link', 'secondary_link',\
      \ 'tertiary_link') THEN 'yes' ELSE 'no' END AS link,\n    CASE WHEN surface\
      \ IN ('unpaved', 'compacted', 'dirt', 'earth', 'fine_gravel', 'grass', 'grass_paver',\
      \ 'gravel', 'ground',\n                          'mud', 'pebblestone', 'salt',\
      \ 'sand', 'woodchips', 'clay', 'ice', 'snow') THEN 'unpaved'\n      WHEN surface\
      \ IN ('paved', 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete',\
      \ 'concrete:lanes',\n                          'concrete:plates', 'paving_stones',\
      \ 'metal', 'wood', 'unhewn_cobblestone') THEN 'paved'\n    END AS int_surface\n\
      \  FROM planet_osm_roads\n  WHERE highway IS NOT NULL\n    OR (railway IS NOT\
      \ NULL AND railway != 'preserved'\n      AND (service IS NULL OR service NOT\
      \ IN ('spur', 'siding', 'yard')))\n  ORDER BY\n    z_order\n) AS roads_low_zoom"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-low-zoom
  properties:
    cache-features: true
    maxzoom: 9
    minzoom: 6
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway,\n    CASE WHEN tags->'intermittent' IN\
      \ ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn',\
      \ 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n\
      \    CASE WHEN tunnel IN ('yes', 'culvert')\n      OR waterway = 'canal' AND\
      \ tunnel = 'flooded'\n      THEN 'yes' ELSE 'no' END AS int_tunnel,\n    'yes'\
      \ AS bridge\n  FROM planet_osm_line\n  WHERE waterway IN ('river', 'canal',\
      \ 'stream', 'drain', 'ditch')\n    AND bridge IN ('yes', 'aqueduct')\n  ORDER\
      \ BY COALESCE(layer,0)\n) AS waterway_bridges"
    type: postgis
  extent: *id001
  geometry: linestring
  id: waterway-bridges
  properties:
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    (CASE WHEN feature IN ('highway_motorway_link',\
      \ 'highway_trunk_link', 'highway_primary_link', 'highway_secondary_link', 'highway_tertiary_link')\
      \ THEN substr(feature, 0, length(feature)-4) ELSE feature END) AS feature,\n\
      \    horse,\n    foot,\n    bicycle,\n    tracktype,\n    int_surface,\n   \
      \ access,\n    construction,\n    service,\n    link,\n    layernotnull\n  FROM\
      \ ( -- subselect that contains both roads and rail/aero\n    SELECT\n      \
      \  way,\n        'highway_' || highway AS feature, --only motorway to tertiary\
      \ links are accepted later on\n        horse,\n        foot,\n        bicycle,\n\
      \        tracktype,\n        CASE WHEN surface IN ('unpaved', 'compacted', 'dirt',\
      \ 'earth', 'fine_gravel', 'grass', 'grass_paver', 'gravel', 'ground',\n    \
      \                          'mud', 'pebblestone', 'salt', 'sand', 'woodchips',\
      \ 'clay', 'ice', 'snow') THEN 'unpaved'\n          WHEN surface IN ('paved',\
      \ 'asphalt', 'cobblestone', 'cobblestone:flattened', 'sett', 'concrete', 'concrete:lanes',\n\
      \                              'concrete:plates', 'paving_stones', 'metal',\
      \ 'wood', 'unhewn_cobblestone') THEN 'paved'\n        END AS int_surface,\n\
      \        CASE WHEN access IN ('destination') THEN 'destination'::text\n    \
      \      WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS access,\n\
      \        construction,\n        CASE\n          WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') THEN 'INT-minor'::text\n          ELSE 'INT-normal'::text\n\
      \        END AS service,\n        CASE\n          WHEN highway IN ('motorway_link',\
      \ 'trunk_link', 'primary_link', 'secondary_link', 'tertiary_link') THEN 'yes'\n\
      \          ELSE 'no'\n        END AS link,\n        COALESCE(layer,0) AS layernotnull,\n\
      \        z_order\n      FROM planet_osm_line\n      WHERE bridge IN ('yes',\
      \ 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle',\
      \ 'viaduct')\n        AND highway IS NOT NULL -- end of road select\n    UNION\
      \ ALL\n    SELECT\n        way,\n        'railway_' || (CASE WHEN railway =\
      \ 'preserved' AND service IN ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n\
      \                         WHEN (railway = 'rail' AND service IN ('spur', 'siding',\
      \ 'yard')) THEN 'INT-spur-siding-yard'\n                         WHEN (railway\
      \ = 'tram' AND service IN ('spur', 'siding', 'yard')) THEN 'tram-service'\n\
      \                         ELSE railway END) AS feature,\n        horse,\n  \
      \      foot,\n        bicycle,\n        tracktype,\n        'null',\n      \
      \  CASE\n          WHEN access IN ('destination') THEN 'destination'::text\n\
      \          WHEN access IN ('no', 'private') THEN 'no'::text\n        END AS\
      \ access,\n        construction,\n        CASE WHEN service IN ('parking_aisle',\
      \ 'drive-through', 'driveway') THEN 'INT-minor'::text ELSE 'INT-normal'::text\
      \ END AS service,\n        'no' AS link,\n        COALESCE(layer,0) AS layernotnull,\n\
      \        z_order\n      FROM planet_osm_line\n      WHERE bridge IN ('yes',\
      \ 'boardwalk', 'cantilever', 'covered', 'low_water_crossing', 'movable', 'trestle',\
      \ 'viaduct')\n        AND railway IS NOT NULL -- end of rail select\n    ) AS\
      \ features\n  ORDER BY\n    layernotnull,\n    z_order,\n    CASE WHEN substring(feature\
      \ for 8) = 'railway_' THEN 2 ELSE 1 END,\n    CASE WHEN feature IN ('railway_INT-preserved-ssy',\
      \ 'railway_INT-spur-siding-yard', 'railway_tram-service') THEN 0 ELSE 1 END,\n\
      \    CASE WHEN access IN ('no', 'private') THEN 0 WHEN access IN ('destination')\
      \ THEN 1 ELSE 2 END,\n    CASE WHEN int_surface IN ('unpaved') THEN 0 ELSE 2\
      \ END\n) AS bridges"
    type: postgis
  extent: *id001
  geometry: linestring
  id: bridges
  properties:
    cache-features: true
    group-by: layernotnull
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE highway = 'bus_guideway'\n\
      ) AS guideways"
    type: postgis
  extent: *id001
  geometry: linestring
  id: guideways
  properties:
    minzoom: 11
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    tags->'entrance' AS entrance,\n    access\n  FROM\
      \ planet_osm_point\n  WHERE (tags->'entrance') IS NOT NULL AND\n    (tags->'indoor'\
      \ = 'no'\n    OR (tags->'indoor') IS NULL))\nAS entrances"
    type: postgis
  extent: *id001
  geometry: point
  id: entrances
  properties:
    minzoom: 18
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    aeroway,\n    bridge IN ('yes', 'boardwalk', 'cantilever',\
      \ 'covered', 'low_water_crossing', 'movable', 'trestle', 'viaduct') AS bridge\n\
      \  FROM planet_osm_line\n  WHERE aeroway IN ('runway', 'taxiway')\n  ORDER BY\
      \ bridge NULLS FIRST,\n    CASE WHEN aeroway = 'runway' THEN 1 ELSE 0 END\n\
      ) AS aeroways"
    type: postgis
  extent: *id001
  geometry: linestring
  id: aeroways
  properties:
    cache-features: true
    minzoom: 11
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM ne_110m_admin_0_boundary_lines_land\n) AS necountries"
    type: postgis
  extent: *id001
  geometry: linestring
  id: necountries
  properties:
    maxzoom: 3
    minzoom: 1
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    admin_level\n  FROM planet_osm_roads\n  WHERE boundary\
      \ = 'administrative'\n    AND admin_level IN ('0', '1', '2', '3', '4')\n   \
      \ AND osm_id < 0\n  ORDER BY admin_level DESC\n) AS admin_low_zoom"
    type: postgis
  extent: *id001
  geometry: linestring
  id: admin-low-zoom
  properties:
    maxzoom: 7
    minzoom: 4
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    admin_level\n  FROM planet_osm_roads\n  WHERE boundary\
      \ = 'administrative'\n    AND admin_level IN ('0', '1', '2', '3', '4', '5',\
      \ '6', '7', '8')\n    AND osm_id < 0\n  ORDER BY admin_level DESC\n) AS admin_mid_zoom"
    type: postgis
  extent: *id001
  geometry: linestring
  id: admin-mid-zoom
  properties:
    maxzoom: 12
    minzoom: 8
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    admin_level\n  FROM planet_osm_roads\n  WHERE boundary\
      \ = 'administrative'\n    AND admin_level IN ('0', '1', '2', '3', '4', '5',\
      \ '6', '7', '8', '9', '10')\n    AND osm_id < 0\n  ORDER BY admin_level::integer\
      \ DESC -- With 10 as a valid value, we need to do a numeric ordering, not a\
      \ text ordering\n) AS admin_high_zoom"
    type: postgis
  extent: *id001
  geometry: linestring
  id: admin-high-zoom
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE power = 'minor_line'\n\
      ) AS power_minorline"
    type: postgis
  extent: *id001
  geometry: linestring
  id: power-minorline
  properties:
    minzoom: 16
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE power = 'line'\n) AS\
      \ power_line"
    type: postgis
  extent: *id001
  geometry: linestring
  id: power-line
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    boundary,\n    tags->'protect_class' AS protect_class,\n\
      \    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0) AS way_pixels\n\
      \  FROM planet_osm_polygon\n  WHERE (boundary IN ('aboriginal_lands', 'national_park')\n\
      \         OR leisure = 'nature_reserve'\n         OR (boundary = 'protected_area'\
      \ AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6')))\n    AND\
      \ building IS NULL\n    AND way_area > 1*!pixel_width!::real*!pixel_height!::real\n\
      ) AS protected_areas"
    type: postgis
  extent: *id001
  geometry: polygon
  id: protected-areas
  properties:
    cache-features: true
    minzoom: 8
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way, \"natural\"\n  FROM planet_osm_point\n  WHERE \"natural\"\
      \ = 'tree'\nUNION ALL\nSELECT\n    way, \"natural\"\n  FROM planet_osm_line\n\
      \  WHERE \"natural\" = 'tree_row'\n) AS trees"
    type: postgis
  extent: *id001
  geometry: polygon
  id: trees
  properties:
    cache-features: true
    minzoom: 16
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    name\n  FROM planet_osm_polygon\n  WHERE way && !bbox!\n\
      \    AND boundary = 'administrative'\n    AND admin_level = '2'\n    AND name\
      \ IS NOT NULL\n    AND way_area > 100*POW(!scale_denominator!*0.001*0.28,2)\n\
      \    AND way_area < 4000000*POW(!scale_denominator!*0.001*0.28,2)\n    AND osm_id\
      \ < 0\n  ORDER BY way_area DESC\n) AS country_names"
    type: postgis
  extent: *id001
  geometry: point
  id: country-names
  properties:
    minzoom: 2
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    CASE\n      WHEN (tags->'population'\
      \ ~ '^[0-9]{1,8}$') THEN (tags->'population')::INTEGER ELSE 0\n    END as population,\n\
      \    round(ascii(md5(osm_id::text)) / 55) AS dir -- base direction factor on\
      \ geometry to be consistent across metatiles\n  FROM planet_osm_point\n  WHERE\
      \ place IN ('city', 'town', 'village', 'hamlet')\n    AND name IS NOT NULL\n\
      \    AND tags @> 'capital=>yes'\n  ORDER BY population DESC\n) AS capital_names"
    type: postgis
  extent: *id001
  geometry: point
  id: capital-names
  properties:
    maxzoom: 15
    minzoom: 3
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    name,\n    admin_level,\n    ref\n  FROM planet_osm_polygon\n\
      \  WHERE way && !bbox!\n    AND boundary = 'administrative'\n    AND admin_level\
      \ = '4'\n    AND name IS NOT NULL\n    AND way_area > 3000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \    AND way_area < 4000000*POW(!scale_denominator!*0.001*0.28,2)\n    AND osm_id\
      \ < 0\n  ORDER BY way_area DESC\n) AS state_names"
    type: postgis
  extent: *id001
  geometry: point
  id: state-names
  properties:
    minzoom: 4
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    score,\n    CASE\n      WHEN (place\
      \ = 'city') THEN 1\n      ELSE 2\n    END as category,\n    round(ascii(md5(osm_id::text))\
      \ / 55) AS dir -- base direction factor on geometry to be consistent across\
      \ metatiles\n  FROM\n    (SELECT\n        osm_id,\n        way,\n        place,\n\
      \        name,\n        (\n          (CASE\n            WHEN (tags->'population'\
      \ ~ '^[0-9]{1,8}$') THEN (tags->'population')::INTEGER\n            WHEN (place\
      \ = 'city') THEN 100000\n            WHEN (place = 'town') THEN 1000\n     \
      \       ELSE 1\n          END)\n          *\n          (CASE\n            WHEN\
      \ (tags @> 'capital=>4') THEN 2\n            ELSE 1\n          END)\n      \
      \  ) AS score\n      FROM planet_osm_point\n      WHERE place IN ('city', 'town')\n\
      \        AND name IS NOT NULL\n        AND NOT (tags @> 'capital=>yes')\n  \
      \  ) as p\n  ORDER BY score DESC, length(name) DESC, name\n) AS placenames_medium"
    type: postgis
  extent: *id001
  geometry: point
  id: placenames-medium
  properties:
    cache-features: true
    maxzoom: 15
    minzoom: 4
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    place,\n    name\n  FROM planet_osm_point\n  WHERE\
      \ place IN ('village', 'hamlet')\n     AND name IS NOT NULL\n     AND NOT tags\
      \ @> 'capital=>yes'\n     OR (place IN ('suburb', 'quarter', 'neighbourhood',\
      \ 'isolated_dwelling', 'farm')\n     ) AND name IS NOT NULL\n  ORDER BY CASE\n\
      \      WHEN place = 'suburb' THEN 7\n      WHEN place = 'village' THEN 6\n \
      \     WHEN place = 'hamlet' THEN 5\n      WHEN place = 'quarter' THEN 4\n  \
      \    WHEN place = 'neighbourhood' THEN 3\n      WHEN place = 'isolated_dwelling'\
      \ THEN 2\n      WHEN place = 'farm' THEN 1\n    END DESC,\n    length(name)\
      \ DESC,\n    name\n) AS placenames_small"
    type: postgis
  extent: *id001
  geometry: point
  id: placenames-small
  properties:
    cache-features: true
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    ref,\n    railway,\n    aerialway,\n\
      \    station\n  FROM\n  (SELECT\n      ST_PointOnSurface(way) AS way,\n    \
      \  name,\n      ref,\n      railway,\n      aerialway,\n      tags->'station'\
      \ AS station,\n      way_area\n    FROM planet_osm_polygon\n    WHERE way &&\
      \ !bbox!\n      AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \  UNION ALL\n  SELECT\n      way,\n      name,\n      ref,\n      railway,\n\
      \      aerialway,\n      tags->'station' AS station,\n      NULL as way_area\n\
      \    FROM planet_osm_point\n    WHERE way && !bbox!\n    ) _\n  WHERE railway\
      \ IN ('station', 'halt', 'tram_stop')\n    OR railway = 'subway_entrance' AND\
      \ way_area IS NULL\n    OR aerialway = 'station'\n  ORDER BY\n    CASE railway\n\
      \      WHEN 'station' THEN 1\n      WHEN 'subway_entrance' THEN 3\n      ELSE\
      \ 2\n    END,\n    way_area DESC NULLS LAST\n) AS stations"
    type: postgis
  extent: *id001
  geometry: point
  id: stations
  properties:
    cache-features: true
    minzoom: 12
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    highway,\n    junction,\n    ref,\n    name,\n\
      \    NULL AS way_pixels\n  FROM planet_osm_point\n  WHERE way && !bbox!\n  \
      \  AND (highway = 'motorway_junction' OR highway = 'traffic_signals' OR junction\
      \ = 'yes')\nUNION ALL\n  SELECT\n    ST_PointOnSurface(way) AS way,\n    highway,\n\
      \    junction,\n    ref,\n    name,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE way && !bbox!\n    AND junction\
      \ = 'yes'\n    AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \  ORDER BY way_pixels DESC NULLS LAST\n) AS junctions"
    type: postgis
  extent: *id001
  geometry: point
  id: junctions
  properties:
    minzoom: 11
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    man_made,\n    name\n  FROM planet_osm_polygon\n  WHERE\
      \ way && !bbox!\n    AND man_made = 'bridge'\n    AND way_area > 125*POW(!scale_denominator!*0.001*0.28,2)\n\
      \    AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n  ORDER BY\
      \ way_area DESC\n) AS bridge_text"
    type: postgis
  extent: *id001
  geometry: point
  id: bridge-text
  properties:
    minzoom: 11
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    name,\n    admin_level\n  FROM planet_osm_polygon\n  WHERE\
      \ way && !bbox!\n    AND boundary = 'administrative'\n    AND admin_level IN\
      \ ('5', '6')\n    AND name IS NOT NULL\n    AND way_area > 12000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \    AND way_area < 196000*POW(!scale_denominator!*0.001*0.28,2)\n    AND osm_id\
      \ < 0\n  ORDER BY\n    admin_level,\n    way_area DESC\n) AS county_names"
    type: postgis
  extent: *id001
  geometry: point
  id: county-names
  properties:
    minzoom: 8
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    *\n  FROM\n  (SELECT -- This subselect allows filtering on\
      \ the feature column\n      way,\n      CONCAT(\n        name,\n        E'\\\
      n' || CONCAT( -- by doing this with a || if both the ele and height branches\
      \ are null, this entire expression is null and only name is used\n         \
      \ CASE\n            WHEN (tags ? 'ele') AND tags->'ele' ~ '^-?\\d{1,4}(\\.\\\
      d+)?$'\n              AND (\"natural\" IN ('peak', 'volcano', 'saddle')\n  \
      \              OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information'\
      \ = 'guidepost')\n                OR amenity = 'shelter')\n            THEN\
      \ CONCAT(REPLACE(ROUND((tags->'ele')::NUMERIC)::TEXT, '-', U&'\\2212'), U&'\\\
      00A0', 'm') END,\n          CASE\n            WHEN (tags ? 'height') AND tags->'height'\
      \ ~ '^\\d{1,3}(\\.\\d+)?$'\n              AND waterway = 'waterfall'\n     \
      \       THEN CONCAT(ROUND((tags->'height')::NUMERIC)::TEXT, U&'\\00A0', 'm')\
      \ END\n          )\n        ) AS name,\n        tags->'parking' as \"parking\"\
      ,\n      COALESCE(\n        'aeroway_' || CASE WHEN aeroway IN ('gate', 'apron',\
      \ 'helipad', 'aerodrome') THEN aeroway END,\n        'tourism_' || CASE WHEN\
      \ tourism IN ('alpine_hut', 'apartment', 'artwork', 'camp_site', 'caravan_site',\
      \ 'chalet', 'gallery', 'guest_house',\n                                    \
      \        'hostel', 'hotel', 'motel', 'museum', 'picnic_site', 'theme_park',\
      \ 'wilderness_hut',\n                                            'zoo') THEN\
      \ tourism END,\n        'amenity_' || CASE WHEN amenity IN ('arts_centre', 'atm',\
      \ 'bank', 'bar', 'bbq', 'bicycle_rental',\n                                \
      \            'bicycle_repair_station','biergarten', 'boat_rental', 'bureau_de_change',\
      \ 'bus_station', 'cafe',\n                                            'car_rental',\
      \ 'car_wash', 'casino', 'charging_station', 'childcare', 'cinema', 'clinic',\
      \ 'college',\n                                            'community_centre',\
      \ 'courthouse', 'dentist', 'doctors', 'drinking_water', 'driving_school',\n\
      \                                            'fast_food', 'ferry_terminal',\
      \ 'fire_station', 'food_court', 'fountain', 'fuel', 'grave_yard',\n        \
      \                                    'hospital', 'hunting_stand', 'ice_cream',\
      \ 'internet_cafe', 'kindergarten', 'library', 'marketplace',\n             \
      \                               'nightclub', 'nursing_home', 'pharmacy', 'place_of_worship',\
      \ 'police', 'post_box',\n                                            'post_office',\
      \ 'prison', 'pub', 'public_bath', 'public_bookcase', 'recycling', 'restaurant',\
      \ 'school',\n                                            'shelter', 'shower',\
      \ 'social_facility', 'taxi', 'telephone', 'theatre', 'toilets', 'townhall',\n\
      \                                            'university', 'vehicle_inspection',\
      \ 'veterinary') THEN amenity END,\n        'amenity_' || CASE WHEN amenity IN\
      \ ('waste_disposal') AND way_area IS NOT NULL THEN amenity END, -- Waste disposal\
      \ points are rendered in the low priority layer\n        'amenity_' || CASE\
      \ WHEN amenity IN ('vending_machine') AND tags->'vending' IN ('excrement_bags',\
      \ 'parking_tickets', 'public_transport_tickets') THEN amenity END,\n       \
      \ 'diplomatic_'|| CASE WHEN tags->'office' IN ('diplomatic') AND tags->'diplomatic'\
      \ IN ('embassy', 'consulate') THEN tags->'diplomatic' ELSE NULL END,\n     \
      \   'advertising_' || CASE WHEN tags->'advertising' in ('column') THEN tags->'advertising'\
      \ END,\n        'emergency_' || CASE WHEN tags->'emergency' IN ('phone') AND\
      \ way_area IS NULL THEN tags->'emergency' END,\n        'shop' || CASE WHEN\
      \ shop IN ('yes', 'no', 'vacant', 'closed', 'disused', 'empty') OR shop IS NULL\
      \ THEN NULL ELSE '' END,\n        'leisure_' || CASE WHEN leisure IN ('amusement_arcade',\
      \ 'beach_resort', 'bird_hide', 'bowling_alley', 'dog_park', 'firepit', 'fishing',\n\
      \                                            'fitness_centre', 'fitness_station',\
      \ 'garden', 'golf_course', 'ice_rink', 'marina', 'miniature_golf',\n       \
      \                                     'outdoor_seating', 'park', 'picnic_table',\
      \ 'pitch', 'playground', 'recreation_ground',\n                            \
      \                'sauna', 'slipway', 'sports_centre', 'stadium', 'swimming_area',\
      \ 'swimming_pool', 'track', 'water_park') THEN leisure END,\n        'power_'\
      \ || CASE WHEN power IN ('plant', 'generator', 'substation') THEN power END,\n\
      \        'man_made_' || CASE WHEN (man_made IN ('chimney', 'communications_tower',\
      \ 'crane', 'lighthouse', 'mast', 'obelisk', 'silo', 'storage_tank',\n      \
      \                                         'telescope', 'tower', 'wastewater_plant',\
      \ 'water_tower', 'water_works', 'windmill', 'works')\n                     \
      \               AND (tags->'location' NOT IN ('roof', 'rooftop') OR NOT (tags\
      \ ? 'location'))) THEN man_made END,\n        'landuse_' || CASE WHEN landuse\
      \ IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry',\
      \ 'vineyard', 'orchard', 'cemetery',\n                                     \
      \       'residential', 'garages', 'meadow', 'grass', 'allotments', 'forest',\
      \ 'farmyard', 'farmland',\n                                            'greenhouse_horticulture',\
      \ 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill',\n\
      \                                            'construction', 'salt_pond', 'military',\
      \ 'plant_nursery') THEN landuse END,\n        'natural_' || CASE WHEN \"natural\"\
      \ IN ('peak', 'volcano', 'saddle', 'cave_entrance') AND way_area IS NULL THEN\
      \ \"natural\" END,\n        'natural_' || CASE WHEN \"natural\" IN ('wood',\
      \ 'water', 'mud', 'wetland', 'bay', 'spring', 'scree', 'shingle', 'bare_rock',\
      \ 'sand', 'heath',\n                                              'grassland',\
      \ 'scrub', 'beach', 'glacier', 'tree', 'strait', 'cape')\n                 \
      \                             THEN \"natural\" END,\n        'waterway_' ||\
      \ CASE WHEN \"waterway\" IN ('waterfall') AND way_area IS NULL THEN waterway\
      \ END,\n        'place_' || CASE WHEN place IN ('island', 'islet', 'square')\
      \ THEN place END,\n        'historic_' || CASE WHEN historic IN ('memorial',\
      \ 'monument', 'archaeological_site', 'fort', 'castle', 'manor', 'city_gate')\n\
      \                      THEN historic END,\n        'military_'|| CASE WHEN military\
      \ IN ('danger_area', 'bunker') THEN military END,\n        'highway_' || CASE\
      \ WHEN highway IN ('services', 'rest_area', 'bus_stop', 'elevator', 'traffic_signals')\
      \ THEN highway END,\n        'highway_'|| CASE WHEN tags @> 'ford=>yes' OR tags\
      \ @> 'ford=>stepping_stones' AND way_area IS NULL THEN 'ford' END,\n       \
      \ 'boundary_' || CASE WHEN boundary IN ('aboriginal_lands', 'national_park')\n\
      \                                  OR (boundary = 'protected_area' AND tags->'protect_class'\
      \ IN ('1','1a','1b','2','3','4','5','6'))\n                                \
      \  THEN boundary END,\n        'leisure_' || CASE WHEN leisure IN ('nature_reserve')\
      \ THEN leisure END,\n        'tourism_' || CASE WHEN tourism IN ('information')\
      \ THEN tourism END,\n        'office' || CASE WHEN tags->'office' IN ('no',\
      \ 'vacant', 'closed', 'disused', 'empty') OR (tags->'office') IS NULL THEN NULL\
      \ ELSE '' END,\n        'barrier_' || CASE WHEN barrier IN ('toll_booth') AND\
      \ way_area IS NULL THEN barrier END,\n        'waterway_' || CASE WHEN waterway\
      \ IN ('dam', 'weir', 'dock') THEN waterway END,\n        'amenity_' || CASE\
      \ WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN amenity END,\n\
      \        'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking'\
      \ NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity END,\n \
      \       'amenity_' || CASE WHEN amenity IN ('parking_entrance')\n          \
      \                      AND tags->'parking' IN ('multi-storey', 'underground')\n\
      \                                AND (access IS NULL OR access NOT IN ('private',\
      \ 'no'))\n                                AND way_area IS NULL\n           \
      \                THEN amenity END,\n        'tourism_' || CASE WHEN tourism\
      \ IN ('viewpoint', 'attraction') THEN tourism END,\n        'place_' || CASE\
      \ WHEN place IN ('locality') AND way_area IS NULL THEN place END\n      ) AS\
      \ feature,\n      access,\n      CASE\n        WHEN \"natural\" IN ('peak',\
      \ 'volcano', 'saddle') THEN\n          CASE\n            WHEN tags->'ele' ~\
      \ '^-?\\d{1,4}(\\.\\d+)?$' THEN (tags->'ele')::NUMERIC\n          END\n    \
      \    WHEN \"waterway\" IN ('waterfall') THEN\n          CASE\n            WHEN\
      \ tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height',\
      \ '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n          END\n      END AS score,\n\
      \      religion,\n      tags->'denomination' as denomination,\n      tags->'generator:source'\
      \ as \"generator:source\",\n      CASE\n        WHEN (man_made IN ('mast', 'tower',\
      \ 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location')\
      \ IS NULL))\n              OR waterway IN ('waterfall') THEN\n          CASE\n\
      \            WHEN tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height',\
      \ '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n          END\n      END AS height,\n\
      \      tags->'location' as location,\n      tags->'icao' as icao,\n      tags->'iata'\
      \ as iata,\n      tags->'office' as office,\n      tags->'recycling_type' as\
      \ recycling_type,\n      tags->'tower:construction' as \"tower:construction\"\
      ,\n      tags->'tower:type' as \"tower:type\",\n      tags->'telescope:type'\
      \ as \"telescope:type\",\n      CASE\n        WHEN man_made IN ('telescope')\
      \ THEN\n          CASE\n            WHEN tags->'telescope:diameter' ~ '^-?\\\
      d{1,4}(\\.\\d+)?$' THEN (tags->'telescope:diameter')::NUMERIC\n          END\n\
      \      END AS \"telescope:diameter\",\n      tags->'castle_type' as castle_type,\n\
      \      tags->'sport' as sport,\n      tags->'information' as information,\n\
      \      tags->'memorial' as memorial,\n      tags->'artwork_type' as artwork_type,\n\
      \      tags->'vending' as vending,\n      CASE WHEN shop IN ('supermarket',\
      \ 'bag', 'bakery', 'beauty', 'bed', 'bookmaker', 'books', 'butcher', 'carpet',\
      \ 'clothes', 'computer',\n                        'confectionery', 'fashion',\
      \ 'convenience', 'department_store', 'doityourself', 'hardware', 'fabric', 'fishmonger',\
      \ 'florist',\n                        'garden_centre', 'hairdresser', 'hifi',\
      \ 'car', 'car_repair', 'bicycle', 'mall', 'pet',\n                        'photo',\
      \ 'photo_studio', 'photography', 'seafood', 'shoes', 'alcohol', 'gift', 'furniture',\
      \ 'kiosk',\n                        'mobile_phone', 'motorcycle', 'musical_instrument',\
      \ 'newsagent', 'optician', 'jewelry', 'jewellery',\n                       \
      \ 'electronics', 'chemist', 'toys', 'travel_agency', 'car_parts', 'greengrocer',\
      \ 'farm', 'stationery',\n                        'laundry', 'dry_cleaning',\
      \ 'beverages', 'perfumery', 'cosmetics', 'variety_store', 'wine', 'outdoor',\n\
      \                        'copyshop', 'sports', 'deli', 'tobacco', 'art', 'tea',\
      \ 'coffee', 'tyres', 'pastry', 'chocolate',\n                        'music',\
      \ 'medical_supply', 'dairy', 'video_games', 'houseware', 'ticket', 'charity',\
      \ 'second_hand',\n                        'interior_decoration', 'video', 'paint',\
      \ 'massage', 'trade', 'wholesale') THEN shop\n                        ELSE 'other'\
      \ END AS shop,\n      CASE WHEN building = 'no' OR building IS NULL THEN 'no'\
      \ ELSE 'yes' END AS is_building,\n      tags->'operator' AS operator,\n    \
      \  ref,\n      way_area,\n      COALESCE(way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0),\
      \ 0) AS way_pixels\n    FROM\n      (SELECT\n          ST_PointOnSurface(way)\
      \ AS way,\n          name,\n          access,\n          aeroway,\n        \
      \  amenity,\n          barrier,\n          boundary,\n          building,\n\
      \          highway,\n          historic,\n          landuse,\n          leisure,\n\
      \          man_made,\n          military,\n          \"natural\",\n        \
      \  place,\n          power,\n          ref,\n          religion,\n         \
      \ shop,\n          tourism,\n          waterway,\n          tags,\n        \
      \  way_area\n        FROM planet_osm_polygon\n        WHERE way && !bbox!\n\
      \          AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n   \
      \   UNION ALL\n      SELECT\n          way,\n          name,\n          access,\n\
      \          aeroway,\n          amenity,\n          barrier,\n          boundary,\n\
      \          building,\n          highway,\n          historic,\n          landuse,\n\
      \          leisure,\n          man_made,\n          military,\n          \"\
      natural\",\n          place,\n          power,\n          ref,\n          religion,\n\
      \          shop,\n          tourism,\n          waterway,\n          tags,\n\
      \          NULL AS way_area\n        FROM planet_osm_point\n        WHERE way\
      \ && !bbox!\n      ) _\n    ) AS features\n  WHERE feature IS NOT NULL\n  ORDER\
      \ BY score DESC NULLS LAST,\n    way_pixels DESC NULLS LAST\n  ) AS amenity_points"
    type: postgis
  extent: *id001
  geometry: point
  id: amenity-points
  properties:
    cache-features: true
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n  way,\n  COALESCE(\n   'highway_' || CASE WHEN tags @> 'ford=>yes'\
      \ OR tags @> 'ford=>stepping_stones' THEN 'ford' END,\n   'leisure_' || CASE\
      \ WHEN leisure IN ('slipway', 'track') THEN leisure END,\n   'attraction_' ||\
      \ CASE WHEN tags @> 'attraction=>water_slide' THEN 'water_slide' END\n    )\
      \ AS feature\n  FROM planet_osm_line\n  -- The upcoming where clause is needed\
      \ for performance only, as the CASE statements would end up doing the equivalent\
      \ filtering\n  WHERE tags @> 'ford=>yes' OR tags @> 'ford=>stepping_stones'\n\
      \    OR leisure IN ('slipway', 'track')\n    OR tags @> 'attraction=>water_slide'\n\
      \  ORDER BY COALESCE(layer,0)\n) AS amenity_line"
    type: postgis
  extent: *id001
  geometry: linestring
  id: amenity-line
  properties:
    minzoom: 16
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    power\nFROM planet_osm_point\nWHERE power IN ('tower',\
      \ 'pole')\nORDER BY\n  CASE power\n    WHEN 'tower' THEN 2\n    WHEN 'pole'\
      \ THEN 1\n  END DESC\n) AS power_towers"
    type: postgis
  extent: *id001
  geometry: point
  id: power-towers
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    highway,\n    height,\n    width,\n    refs\n \
      \ FROM (\n    SELECT\n        way,\n        osm_id,\n        highway,\n    \
      \    array_length(refs,1) AS height,\n        (SELECT MAX(char_length(ref))\
      \ FROM unnest(refs) AS u(ref)) AS width,\n        array_to_string(refs, E'\\\
      n') AS refs\n      FROM (\n        SELECT\n            way,\n            osm_id,\n\
      \            highway,\n            string_to_array(ref, ';') AS refs\n     \
      \   FROM planet_osm_roads\n          WHERE highway IN ('motorway', 'trunk',\
      \ 'primary', 'secondary')\n          AND ref IS NOT NULL\n      ) AS p) AS q\n\
      \  WHERE height <= 4 AND width <= 11\n  ORDER BY\n    CASE\n      WHEN highway\
      \ = 'motorway' THEN 38\n      WHEN highway = 'trunk' THEN 37\n      WHEN highway\
      \ = 'primary' THEN 36\n      WHEN highway = 'secondary' THEN 35\n    END DESC\
      \ NULLS LAST,\n    height DESC,\n    width DESC,\n    refs,\n    osm_id\n) AS\
      \ roads_text_ref_low_zoom"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-text-ref-low-zoom
  properties:
    maxzoom: 12
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    highway,\n    height,\n    width,\n    refs\n \
      \ FROM (\n    SELECT\n        osm_id,\n        way,\n        highway,\n    \
      \    array_length(refs,1) AS height,\n        (SELECT MAX(char_length(ref))\
      \ FROM unnest(refs) AS u(ref)) AS width,\n        array_to_string(refs, E'\\\
      n') AS refs\n      FROM (\n        SELECT\n            osm_id,\n           \
      \ way,\n            COALESCE(\n              CASE WHEN highway IN ('motorway',\
      \ 'trunk', 'primary', 'secondary', 'tertiary') THEN highway END,\n         \
      \     CASE WHEN aeroway IN ('runway', 'taxiway') THEN aeroway END\n        \
      \    ) AS highway,\n            string_to_array(ref, ';') AS refs\n        \
      \  FROM planet_osm_line\n          WHERE (highway IN ('motorway', 'trunk', 'primary',\
      \ 'secondary', 'tertiary') OR aeroway IN ('runway', 'taxiway'))\n          \
      \  AND ref IS NOT NULL\n      ) AS p) AS q\n  WHERE height <= 4 AND width <=\
      \ 11\n  ORDER BY\n    CASE\n      WHEN highway = 'motorway' THEN 38\n      WHEN\
      \ highway = 'trunk' THEN 37\n      WHEN highway = 'primary' THEN 36\n      WHEN\
      \ highway = 'secondary' THEN 35\n      WHEN highway = 'tertiary' THEN 34\n \
      \     WHEN highway = 'runway' THEN 6\n      WHEN highway = 'taxiway' THEN 5\n\
      \    END DESC NULLS LAST,\n    height DESC,\n    width DESC,\n    refs,\n  \
      \  osm_id\n) AS roads_text_ref"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-text-ref
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    highway,\n    name\n  FROM planet_osm_polygon\n  WHERE\
      \ way && !bbox!\n    AND (highway IN ('pedestrian', 'footway', 'service', 'living_street',\
      \ 'platform')\n      OR (railway IN ('platform')\n          AND (tags->'location'\
      \ NOT IN ('underground') OR (tags->'location') IS NULL)\n          AND (tunnel\
      \ NOT IN ('yes', 'building_passage') OR tunnel IS NULL)\n          AND (covered\
      \ NOT IN ('yes') OR covered IS NULL)))\n    AND name IS NOT NULL\n    AND way_area\
      \ > 3000*POW(!scale_denominator!*0.001*0.28,2)\n    AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \  ORDER BY way_area DESC\n) AS roads_area_text_name"
    type: postgis
  extent: *id001
  geometry: point
  id: roads-area-text-name
  properties:
    minzoom: 15
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    CASE WHEN substr(highway, length(highway)-4, 5)\
      \ = '_link' THEN substr(highway, 0, length(highway)-4) ELSE highway END,\n \
      \   CASE WHEN (tunnel = 'yes' OR tunnel = 'building_passage' OR covered = 'yes')\
      \ THEN 'yes' ELSE 'no' END AS tunnel,\n    construction,\n    name,\n    CASE\n\
      \      WHEN oneway IN ('yes', '-1') THEN oneway\n      WHEN junction IN ('roundabout')\
      \ AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'\n  \
      \  END AS oneway,\n    horse, bicycle\n  FROM planet_osm_line l\n  WHERE highway\
      \ IN ('motorway', 'motorway_link', 'trunk', 'trunk_link', 'primary', 'primary_link',\
      \ 'secondary', 'secondary_link', 'tertiary',\n                    'tertiary_link',\
      \ 'residential', 'unclassified', 'road', 'service', 'pedestrian', 'raceway',\
      \ 'living_street', 'construction')\n    AND (name IS NOT NULL\n      OR oneway\
      \ IN ('yes', '-1')\n      OR junction IN ('roundabout'))\n  ORDER BY\n    z_order\
      \ DESC, -- put important roads first\n    COALESCE(layer, 0), -- put top layered\
      \ roads first\n    length(name) DESC, -- Try to fit big labels in first\n  \
      \  name DESC, -- Force a consistent ordering between differently named streets\n\
      \    l.osm_id DESC -- Force an ordering for streets of the same name, e.g. dualized\
      \ roads\n) AS roads_text_name"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-text-name
  properties:
    cache-features: true
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    highway,\n    construction,\n    name,\n    CASE\n\
      \      WHEN oneway IN ('yes', '-1') THEN oneway\n      WHEN junction IN ('roundabout')\
      \ AND (oneway IS NULL OR NOT oneway IN ('no', 'reversible')) THEN 'yes'\n  \
      \  END AS oneway,\n    horse,\n    bicycle\n  FROM planet_osm_line\n  WHERE\
      \ highway IN ('bridleway', 'footway', 'cycleway', 'path', 'track', 'steps',\
      \ 'construction')\n    AND (name IS NOT NULL\n      OR oneway IN ('yes', '-1')\n\
      \      OR junction IN ('roundabout'))\n) AS paths_text_name"
    type: postgis
  extent: *id001
  geometry: linestring
  id: paths-text-name
  properties:
    cache-features: true
    minzoom: 15
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    CASE WHEN railway = 'preserved' AND service IN\
      \ ('spur', 'siding', 'yard') THEN 'INT-preserved-ssy'::text\n         WHEN (railway\
      \ = 'rail' AND service IN ('spur', 'siding', 'yard')) THEN 'INT-spur-siding-yard'\n\
      \         WHEN (railway = 'tram' AND service IN ('spur', 'siding', 'yard'))\
      \ THEN 'tram-service' ELSE railway END AS railway,\n    CASE WHEN (tunnel =\
      \ 'yes' OR tunnel = 'building_passage' OR covered = 'yes') THEN 'yes' ELSE 'no'\
      \ END AS tunnel,\n    tags->'highspeed' as highspeed,\n    tags->'usage' as\
      \ usage,\n    construction,\n    name\n  FROM planet_osm_line l\n  WHERE railway\
      \ IN ('rail', 'subway', 'narrow_gauge', 'light_rail', 'preserved', 'funicular',\n\
      \                    'monorail', 'miniature', 'tram', 'disused', 'construction')\n\
      \    AND (tunnel IS NULL OR NOT tunnel IN ('yes', 'building_passage'))\n   \
      \ AND highway IS NULL -- Prevent duplicate rendering\n    AND name IS NOT NULL\n\
      \  ORDER BY\n    z_order DESC, -- put important rails first\n    COALESCE(layer,\
      \ 0), -- put top layered rails first\n    length(name) DESC, -- Try to fit big\
      \ labels in first\n    name DESC, -- Force a consistent ordering between differently\
      \ named railways\n    l.osm_id DESC -- Force an ordering for railways of the\
      \ same name, e.g. dualized rails\n) AS railways_text_name"
    type: postgis
  extent: *id001
  geometry: linestring
  id: railways-text-name
  properties:
    minzoom: 11
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    highway,\n    height,\n    width,\n    refs\n \
      \ FROM (\n    SELECT\n        osm_id,\n        way,\n        highway,\n    \
      \    array_length(refs,1) AS height,\n        (SELECT MAX(char_length(ref))\
      \ FROM unnest(refs) AS u(ref)) AS width,\n        array_to_string(refs, E'\\\
      n') AS refs\n      FROM (\n        SELECT\n            osm_id,\n           \
      \ way,\n            CASE WHEN highway IN ('unclassified', 'residential', 'track')\
      \ THEN highway END AS highway,\n            string_to_array(ref, ';') AS refs\n\
      \          FROM planet_osm_line\n          WHERE highway IN ('unclassified',\
      \ 'residential', 'track')\n            AND ref IS NOT NULL\n      ) AS p) AS\
      \ q\n  WHERE height <= 4 AND width <= 11\n  ORDER BY\n    CASE\n      WHEN highway\
      \ = 'unclassified' THEN 33\n      WHEN highway = 'residential' THEN 32\n   \
      \   WHEN highway = 'track' THEN 30\n    END DESC NULLS LAST,\n    height DESC,\n\
      \    width DESC,\n    refs,\n    osm_id\n) AS roads_text_ref_minor"
    type: postgis
  extent: *id001
  geometry: linestring
  id: roads-text-ref-minor
  properties:
    minzoom: 15
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels,\n    COALESCE(\n      'landuse_' || CASE WHEN landuse IN ('forest',\
      \ 'military', 'farmland') THEN landuse END,\n      'military_' || CASE WHEN\
      \ military IN ('danger_area') THEN military END,\n      'natural_' || CASE WHEN\
      \ \"natural\" IN ('wood', 'glacier', 'sand', 'scree', 'shingle', 'bare_rock',\n\
      \                                            'water', 'bay', 'strait') THEN\
      \ \"natural\" END,\n      'place_' || CASE WHEN place IN ('island') THEN place\
      \ END,\n      'boundary_' || CASE WHEN boundary IN ('aboriginal_lands', 'national_park')\n\
      \                               OR (boundary = 'protected_area' AND tags->'protect_class'\
      \ IN ('1','1a','1b','2','3','4','5','6'))\n                               THEN\
      \ boundary END,\n      'leisure_' || CASE WHEN leisure IN ('nature_reserve')\
      \ THEN leisure END\n    ) AS feature,\n    name,\n    CASE WHEN building = 'no'\
      \ OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building -- always no with\
      \ the where conditions\n  FROM planet_osm_polygon\n  WHERE way && !bbox!\n \
      \   AND (landuse IN ('forest', 'military', 'farmland')\n      OR military IN\
      \ ('danger_area')\n      OR \"natural\" IN ('wood', 'glacier', 'sand', 'scree',\
      \ 'shingle', 'bare_rock', 'water', 'bay', 'strait')\n      OR \"place\" IN ('island')\n\
      \      OR boundary IN ('aboriginal_lands', 'national_park')\n      OR (boundary\
      \ = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6'))\n\
      \      OR leisure IN ('nature_reserve'))\n    AND building IS NULL\n    AND\
      \ name IS NOT NULL\n    AND way_area > 100*POW(!scale_denominator!*0.001*0.28,2)\n\
      \    AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n  ORDER BY\
      \ way_area DESC\n) AS text_poly_low_zoom"
    type: postgis
  extent: *id001
  geometry: point
  id: text-poly-low-zoom
  properties:
    maxzoom: 9
    minzoom: 0
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n  way,\n    NULL as way_pixels,\n    COALESCE('aerialway_' ||\
      \ aerialway, 'attraction_' || CASE WHEN tags @> 'attraction=>water_slide' THEN\
      \ 'water_slide' END, 'leisure_' || leisure, 'man_made_' || man_made, 'waterway_'\
      \ || waterway, 'natural_' || \"natural\") AS feature,\n    access,\n    name,\n\
      \    tags->'operator' as operator,\n    ref,\n    NULL AS way_area,\n    CASE\
      \ WHEN building = 'no' OR building IS NULL THEN 'no' ELSE 'yes' END AS is_building\n\
      \  FROM planet_osm_line\n  WHERE (man_made IN ('pier', 'breakwater', 'groyne',\
      \ 'embankment')\n      OR (man_made = 'pipeline'\n         AND tags-> 'location'\
      \ IN ('overground', 'overhead', 'surface', 'outdoor')\n         OR bridge IN\
      \ ('yes', 'aqueduct', 'cantilever', 'covered', 'trestle', 'viaduct'))\n    \
      \  OR tags @> 'attraction=>water_slide'\n      OR aerialway IN ('cable_car',\
      \ 'gondola', 'mixed_lift', 'goods', 'chair_lift', 'drag_lift', 't-bar', 'j-bar',\
      \ 'platter', 'rope_tow', 'zip_line')\n      OR leisure IN ('slipway', 'track')\n\
      \      OR waterway IN ('dam', 'weir')\n      OR \"natural\" IN ('arete', 'cliff',\
      \ 'ridge'))\n    AND name IS NOT NULL\n) AS text_line"
    type: postgis
  extent: *id001
  geometry: linestring
  id: text-line
  properties:
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    *\n  FROM\n  (SELECT -- This subselect allows filtering on\
      \ the feature column\n      way,\n      CONCAT(\n        name,\n        E'\\\
      n' || CONCAT( -- by doing this with a || if both the ele and height branches\
      \ are null, this entire expression is null and only name is used\n         \
      \ CASE\n            WHEN (tags ? 'ele') AND tags->'ele' ~ '^-?\\d{1,4}(\\.\\\
      d+)?$'\n              AND (\"natural\" IN ('peak', 'volcano', 'saddle')\n  \
      \              OR tourism = 'alpine_hut' OR (tourism = 'information' AND tags->'information'\
      \ = 'guidepost')\n                OR amenity = 'shelter')\n            THEN\
      \ CONCAT(REPLACE(ROUND((tags->'ele')::NUMERIC)::TEXT, '-', U&'\\2212'), U&'\\\
      00A0', 'm') END,\n          CASE\n            WHEN (tags ? 'height') AND tags->'height'\
      \ ~ '^\\d{1,3}(\\.\\d+)?$'\n              AND waterway = 'waterfall'\n     \
      \       THEN CONCAT(ROUND((tags->'height')::NUMERIC)::TEXT, U&'\\00A0', 'm')\
      \ END\n          )\n        ) AS name,\n        tags->'parking' as \"parking\"\
      ,\n      COALESCE(\n        'aeroway_' || CASE WHEN aeroway IN ('gate', 'apron',\
      \ 'helipad', 'aerodrome') THEN aeroway END,\n        'tourism_' || CASE WHEN\
      \ tourism IN ('alpine_hut', 'apartment', 'artwork', 'camp_site', 'caravan_site',\
      \ 'chalet', 'gallery', 'guest_house',\n                                    \
      \        'hostel', 'hotel', 'motel', 'museum', 'picnic_site', 'theme_park',\
      \ 'wilderness_hut',\n                                            'zoo') THEN\
      \ tourism END,\n        'amenity_' || CASE WHEN amenity IN ('arts_centre', 'atm',\
      \ 'bank', 'bar', 'bbq', 'bicycle_rental',\n                                \
      \            'bicycle_repair_station','biergarten', 'boat_rental', 'bureau_de_change',\
      \ 'bus_station', 'cafe',\n                                            'car_rental',\
      \ 'car_wash', 'casino', 'charging_station', 'childcare', 'cinema', 'clinic',\
      \ 'college',\n                                            'community_centre',\
      \ 'courthouse', 'dentist', 'doctors', 'drinking_water', 'driving_school',\n\
      \                                            'fast_food', 'ferry_terminal',\
      \ 'fire_station', 'food_court', 'fountain', 'fuel', 'grave_yard',\n        \
      \                                    'hospital', 'hunting_stand', 'ice_cream',\
      \ 'internet_cafe', 'kindergarten', 'library', 'marketplace',\n             \
      \                               'nightclub', 'nursing_home', 'pharmacy', 'place_of_worship',\
      \ 'police', 'post_box',\n                                            'post_office',\
      \ 'prison', 'pub', 'public_bath', 'public_bookcase', 'recycling', 'restaurant',\
      \ 'school',\n                                            'shelter', 'shower',\
      \ 'social_facility', 'taxi', 'telephone', 'theatre', 'toilets', 'townhall',\n\
      \                                            'university', 'vehicle_inspection',\
      \ 'veterinary') THEN amenity END,\n        'amenity_' || CASE WHEN amenity IN\
      \ ('waste_disposal') AND way_area IS NOT NULL THEN amenity END, -- Waste disposal\
      \ points are rendered in the low priority layer\n        'amenity_' || CASE\
      \ WHEN amenity IN ('vending_machine') AND tags->'vending' IN ('excrement_bags',\
      \ 'parking_tickets', 'public_transport_tickets') THEN amenity END,\n       \
      \ 'diplomatic_'|| CASE WHEN tags->'office' IN ('diplomatic') AND tags->'diplomatic'\
      \ IN ('embassy', 'consulate') THEN tags->'diplomatic' ELSE NULL END,\n     \
      \   'advertising_' || CASE WHEN tags->'advertising' in ('column') THEN tags->'advertising'\
      \ END,\n        'emergency_' || CASE WHEN tags->'emergency' IN ('phone') AND\
      \ way_area IS NULL THEN tags->'emergency' END,\n        'shop' || CASE WHEN\
      \ shop IN ('yes', 'no', 'vacant', 'closed', 'disused', 'empty') OR shop IS NULL\
      \ THEN NULL ELSE '' END,\n        'leisure_' || CASE WHEN leisure IN ('amusement_arcade',\
      \ 'beach_resort', 'bird_hide', 'bowling_alley', 'dog_park', 'firepit', 'fishing',\n\
      \                                            'fitness_centre', 'fitness_station',\
      \ 'garden', 'golf_course', 'ice_rink', 'marina', 'miniature_golf',\n       \
      \                                     'outdoor_seating', 'park', 'picnic_table',\
      \ 'pitch', 'playground', 'recreation_ground',\n                            \
      \                'sauna', 'slipway', 'sports_centre', 'stadium', 'swimming_area',\
      \ 'swimming_pool', 'track', 'water_park') THEN leisure END,\n        'power_'\
      \ || CASE WHEN power IN ('plant', 'generator', 'substation') THEN power END,\n\
      \        'man_made_' || CASE WHEN (man_made IN ('chimney', 'communications_tower',\
      \ 'crane', 'lighthouse', 'mast', 'obelisk', 'silo', 'storage_tank',\n      \
      \                                         'telescope', 'tower', 'wastewater_plant',\
      \ 'water_tower', 'water_works', 'windmill', 'works')\n                     \
      \               AND (tags->'location' NOT IN ('roof', 'rooftop') OR NOT (tags\
      \ ? 'location'))) THEN man_made END,\n        'landuse_' || CASE WHEN landuse\
      \ IN ('reservoir', 'basin', 'recreation_ground', 'village_green', 'quarry',\
      \ 'vineyard', 'orchard', 'cemetery',\n                                     \
      \       'residential', 'garages', 'meadow', 'grass', 'allotments', 'forest',\
      \ 'farmyard', 'farmland',\n                                            'greenhouse_horticulture',\
      \ 'retail', 'industrial', 'railway', 'commercial', 'brownfield', 'landfill',\n\
      \                                            'construction', 'salt_pond', 'military',\
      \ 'plant_nursery') THEN landuse END,\n        'natural_' || CASE WHEN \"natural\"\
      \ IN ('peak', 'volcano', 'saddle', 'cave_entrance') AND way_area IS NULL THEN\
      \ \"natural\" END,\n        'natural_' || CASE WHEN \"natural\" IN ('wood',\
      \ 'water', 'mud', 'wetland', 'bay', 'spring', 'scree', 'shingle', 'bare_rock',\
      \ 'sand', 'heath',\n                                              'grassland',\
      \ 'scrub', 'beach', 'glacier', 'tree', 'strait', 'cape')\n                 \
      \                             THEN \"natural\" END,\n        'waterway_' ||\
      \ CASE WHEN \"waterway\" IN ('waterfall') AND way_area IS NULL THEN waterway\
      \ END,\n        'place_' || CASE WHEN place IN ('island', 'islet', 'square')\
      \ THEN place END,\n        'historic_' || CASE WHEN historic IN ('memorial',\
      \ 'monument', 'archaeological_site', 'fort', 'castle', 'manor', 'city_gate')\n\
      \                      THEN historic END,\n        'military_'|| CASE WHEN military\
      \ IN ('danger_area', 'bunker') THEN military END,\n        'highway_' || CASE\
      \ WHEN highway IN ('services', 'rest_area', 'bus_stop', 'elevator', 'traffic_signals')\
      \ THEN highway END,\n        'highway_'|| CASE WHEN tags @> 'ford=>yes' OR tags\
      \ @> 'ford=>stepping_stones' AND way_area IS NULL THEN 'ford' END,\n       \
      \ 'boundary_' || CASE WHEN boundary IN ('aboriginal_lands', 'national_park')\n\
      \                                  OR (boundary = 'protected_area' AND tags->'protect_class'\
      \ IN ('1','1a','1b','2','3','4','5','6'))\n                                \
      \  THEN boundary END,\n        'leisure_' || CASE WHEN leisure IN ('nature_reserve')\
      \ THEN leisure END,\n        'tourism_' || CASE WHEN tourism IN ('information')\
      \ THEN tourism END,\n        'office' || CASE WHEN tags->'office' IN ('no',\
      \ 'vacant', 'closed', 'disused', 'empty') OR (tags->'office') IS NULL THEN NULL\
      \ ELSE '' END,\n        'barrier_' || CASE WHEN barrier IN ('toll_booth') AND\
      \ way_area IS NULL THEN barrier END,\n        'waterway_' || CASE WHEN waterway\
      \ IN ('dam', 'weir', 'dock') THEN waterway END,\n        'amenity_' || CASE\
      \ WHEN amenity IN ('bicycle_parking', 'motorcycle_parking') THEN amenity END,\n\
      \        'amenity_' || CASE WHEN amenity IN ('parking') AND (tags->'parking'\
      \ NOT IN ('underground') OR (tags->'parking') IS NULL) THEN amenity END,\n \
      \       'amenity_' || CASE WHEN amenity IN ('parking_entrance')\n          \
      \                      AND tags->'parking' IN ('multi-storey', 'underground')\n\
      \                                AND (access IS NULL OR access NOT IN ('private',\
      \ 'no'))\n                                AND way_area IS NULL\n           \
      \                THEN amenity END,\n        'tourism_' || CASE WHEN tourism\
      \ IN ('viewpoint', 'attraction') THEN tourism END,\n        'place_' || CASE\
      \ WHEN place IN ('locality') AND way_area IS NULL THEN place END\n      ) AS\
      \ feature,\n      access,\n      CASE\n        WHEN \"natural\" IN ('peak',\
      \ 'volcano', 'saddle') THEN\n          CASE\n            WHEN tags->'ele' ~\
      \ '^-?\\d{1,4}(\\.\\d+)?$' THEN (tags->'ele')::NUMERIC\n          END\n    \
      \    WHEN \"waterway\" IN ('waterfall') THEN\n          CASE\n            WHEN\
      \ tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height',\
      \ '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n          END\n      END AS score,\n\
      \      religion,\n      tags->'denomination' as denomination,\n      tags->'generator:source'\
      \ as \"generator:source\",\n      CASE\n        WHEN (man_made IN ('mast', 'tower',\
      \ 'chimney', 'crane') AND (tags->'location' NOT IN ('roof', 'rooftop') OR (tags->'location')\
      \ IS NULL))\n              OR waterway IN ('waterfall') THEN\n          CASE\n\
      \            WHEN tags->'height' ~ '^\\d{1,3}(\\.\\d+)?( m)?$' THEN (SUBSTRING(tags->'height',\
      \ '^(\\d{1,3}(\\.\\d+)?)( m)?$'))::NUMERIC\n          END\n      END AS height,\n\
      \      tags->'location' as location,\n      tags->'icao' as icao,\n      tags->'iata'\
      \ as iata,\n      tags->'office' as office,\n      tags->'recycling_type' as\
      \ recycling_type,\n      tags->'tower:construction' as \"tower:construction\"\
      ,\n      tags->'tower:type' as \"tower:type\",\n      tags->'telescope:type'\
      \ as \"telescope:type\",\n      CASE\n        WHEN man_made IN ('telescope')\
      \ THEN\n          CASE\n            WHEN tags->'telescope:diameter' ~ '^-?\\\
      d{1,4}(\\.\\d+)?$' THEN (tags->'telescope:diameter')::NUMERIC\n          END\n\
      \      END AS \"telescope:diameter\",\n      tags->'castle_type' as castle_type,\n\
      \      tags->'sport' as sport,\n      tags->'information' as information,\n\
      \      tags->'memorial' as memorial,\n      tags->'artwork_type' as artwork_type,\n\
      \      tags->'vending' as vending,\n      CASE WHEN shop IN ('supermarket',\
      \ 'bag', 'bakery', 'beauty', 'bed', 'bookmaker', 'books', 'butcher', 'carpet',\
      \ 'clothes', 'computer',\n                        'confectionery', 'fashion',\
      \ 'convenience', 'department_store', 'doityourself', 'hardware', 'fabric', 'fishmonger',\
      \ 'florist',\n                        'garden_centre', 'hairdresser', 'hifi',\
      \ 'car', 'car_repair', 'bicycle', 'mall', 'pet',\n                        'photo',\
      \ 'photo_studio', 'photography', 'seafood', 'shoes', 'alcohol', 'gift', 'furniture',\
      \ 'kiosk',\n                        'mobile_phone', 'motorcycle', 'musical_instrument',\
      \ 'newsagent', 'optician', 'jewelry', 'jewellery',\n                       \
      \ 'electronics', 'chemist', 'toys', 'travel_agency', 'car_parts', 'greengrocer',\
      \ 'farm', 'stationery',\n                        'laundry', 'dry_cleaning',\
      \ 'beverages', 'perfumery', 'cosmetics', 'variety_store', 'wine', 'outdoor',\n\
      \                        'copyshop', 'sports', 'deli', 'tobacco', 'art', 'tea',\
      \ 'coffee', 'tyres', 'pastry', 'chocolate',\n                        'music',\
      \ 'medical_supply', 'dairy', 'video_games', 'houseware', 'ticket', 'charity',\
      \ 'second_hand',\n                        'interior_decoration', 'video', 'paint',\
      \ 'massage', 'trade', 'wholesale') THEN shop\n                        ELSE 'other'\
      \ END AS shop,\n      CASE WHEN building = 'no' OR building IS NULL THEN 'no'\
      \ ELSE 'yes' END AS is_building,\n      tags->'operator' AS operator,\n    \
      \  ref,\n      way_area,\n      COALESCE(way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0),\
      \ 0) AS way_pixels\n    FROM\n      (SELECT\n          ST_PointOnSurface(way)\
      \ AS way,\n          name,\n          access,\n          aeroway,\n        \
      \  amenity,\n          barrier,\n          boundary,\n          building,\n\
      \          highway,\n          historic,\n          landuse,\n          leisure,\n\
      \          man_made,\n          military,\n          \"natural\",\n        \
      \  place,\n          power,\n          ref,\n          religion,\n         \
      \ shop,\n          tourism,\n          waterway,\n          tags,\n        \
      \  way_area\n        FROM planet_osm_polygon\n        WHERE way && !bbox!\n\
      \          AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n   \
      \   UNION ALL\n      SELECT\n          way,\n          name,\n          access,\n\
      \          aeroway,\n          amenity,\n          barrier,\n          boundary,\n\
      \          building,\n          highway,\n          historic,\n          landuse,\n\
      \          leisure,\n          man_made,\n          military,\n          \"\
      natural\",\n          place,\n          power,\n          ref,\n          religion,\n\
      \          shop,\n          tourism,\n          waterway,\n          tags,\n\
      \          NULL AS way_area\n        FROM planet_osm_point\n        WHERE way\
      \ && !bbox!\n      ) _\n    ) AS features\n  WHERE feature IS NOT NULL\n  ORDER\
      \ BY score DESC NULLS LAST,\n    way_pixels DESC NULLS LAST\n  ) AS amenity_points"
    type: postgis
  extent: *id001
  geometry: point
  id: text-point
  properties:
    minzoom: 10
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    name,\n    ST_PointOnSurface(way) AS way,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE way && !bbox!\n    AND building\
      \ IS NOT NULL\n    AND building NOT IN ('no')\n    AND name IS NOT NULL\n  \
      \  AND way_area < 4000000*POW(!scale_denominator!*0.001*0.28,2)\n  ORDER BY\
      \ way_area DESC\n) AS building_text"
    type: postgis
  extent: *id001
  geometry: point
  id: building-text
  properties:
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way\n  FROM planet_osm_line\n  WHERE \"addr:interpolation\"\
      \ IS NOT NULL\n) AS interpolation"
    type: postgis
  extent: *id001
  geometry: linestring
  id: interpolation
  properties:
    minzoom: 17
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    ST_PointOnSurface(way) AS way,\n    \"addr:housenumber\"\
      \ AS addr_housenumber,\n    \"addr:housename\" AS addr_housename,\n    tags->'addr:unit'\
      \ AS addr_unit,\n    tags->'addr:flats' AS addr_flats,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE way && !bbox!\n    AND ((\"\
      addr:housenumber\" IS NOT NULL) OR (\"addr:housename\" IS NOT NULL) OR ((tags->'addr:unit')\
      \ IS NOT NULL) OR ((tags->'addr:flats') IS NOT NULL))\n    AND building IS NOT\
      \ NULL\n    AND way_area < 4000000*POW(!scale_denominator!*0.001*0.28,2)\nUNION\
      \ ALL\nSELECT\n    way,\n    \"addr:housenumber\" AS addr_housenumber,\n   \
      \ \"addr:housename\" AS addr_housename,\n    tags->'addr:unit' AS addr_unit,\n\
      \    tags->'addr:flats' AS addr_flats,\n    NULL AS way_pixels\n  FROM planet_osm_point\n\
      \  WHERE way && !bbox!\n    AND ((\"addr:housenumber\" IS NOT NULL) OR (\"addr:housename\"\
      \ IS NOT NULL) OR ((tags->'addr:unit') IS NOT NULL) OR ((tags->'addr:flats')\
      \ IS NOT NULL))\n  ORDER BY way_pixels DESC NULLS LAST\n) AS addresses"
    type: postgis
  extent: *id001
  geometry: point
  id: addresses
  properties:
    minzoom: 17
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    waterway,\n    lock,\n    name,\n    \"natural\"\
      ,\n    tags->'lock_name' AS lock_name,\n    CASE WHEN tags->'intermittent' IN\
      \ ('yes')\n      OR tags->'seasonal' IN ('yes', 'spring', 'summer', 'autumn',\
      \ 'winter', 'wet_season', 'dry_season')\n      THEN 'yes' ELSE 'no' END AS int_intermittent,\n\
      \    CASE WHEN tunnel IN ('yes', 'culvert')\n      OR waterway = 'canal' AND\
      \ tunnel = 'flooded'\n      THEN 'yes' ELSE 'no' END AS int_tunnel\n  FROM planet_osm_line\n\
      \  WHERE (waterway IN ('river', 'canal', 'stream', 'drain', 'ditch')\n     \
      \    OR \"natural\" IN ('bay', 'strait'))\n    AND (tunnel IS NULL OR tunnel\
      \ != 'culvert')\n    AND name IS NOT NULL\n  ORDER BY COALESCE(layer,0)\n) AS\
      \ water_lines_text"
    type: postgis
  extent: *id001
  geometry: linestring
  id: water-lines-text
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name\n  FROM planet_osm_line\n  WHERE route = 'ferry'\n\
      \    AND osm_id > 0\n    AND name IS NOT NULL\n) AS ferry_routes_text"
    type: postgis
  extent: *id001
  geometry: linestring
  id: ferry-routes-text
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    admin_level,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE boundary = 'administrative'\n\
      \    AND admin_level IN ('1', '2', '3', '4', '5', '6', '7', '8', '9', '10')\n\
      \    AND name IS NOT NULL\n    AND osm_id < 0\n    AND way_area > 196000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \  ORDER BY admin_level::integer ASC, way_area DESC\n) AS admin_text"
    type: postgis
  extent: *id001
  geometry: linestring
  id: admin-text
  properties:
    minzoom: 11
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    boundary,\n    tags->'protect_class'\
      \ AS protect_class,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n  FROM planet_osm_polygon\n  WHERE (boundary IN ('aboriginal_lands',\
      \ 'national_park')\n         OR leisure = 'nature_reserve'\n         OR (boundary\
      \ = 'protected_area' AND tags->'protect_class' IN ('1','1a','1b','2','3','4','5','6')))\n\
      \    AND name IS NOT NULL\n) AS protected_areas_text"
    type: postgis
  extent: *id001
  geometry: linestring
  id: protected-areas-text
  properties:
    minzoom: 13
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    COALESCE(\n      'highway_' || CASE\
      \ WHEN highway IN ('mini_roundabout') AND way_area IS NULL THEN highway END,\n\
      \      'railway_' || CASE WHEN railway IN ('level_crossing', 'crossing') AND\
      \ way_area IS NULL THEN railway END,\n      'amenity_' || CASE WHEN amenity\
      \ IN ('bench', 'waste_basket', 'waste_disposal') AND way_area IS NULL THEN amenity\
      \ END,\n      'historic_' || CASE WHEN historic IN ('wayside_cross', 'wayside_shrine')\
      \ AND way_area IS NULL THEN historic END,\n      'man_made_' || CASE WHEN man_made\
      \ IN ('cross') AND way_area IS NULL THEN man_made END,\n      'barrier_' ||\
      \ CASE WHEN barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block',\
      \ 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile',\
      \ 'turnstile', 'kissing_gate') THEN barrier END\n    )  AS feature,\n    access,\n\
      \    way_area,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n    FROM\n      (SELECT\n          ST_PointOnSurface(way) AS\
      \ way,\n          name,\n          access,\n          amenity,\n          barrier,\n\
      \          highway,\n          historic,\n          man_made,\n          railway,\n\
      \          tags,\n          way_area\n        FROM planet_osm_polygon\n    \
      \    WHERE way && !bbox!\n          AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \      UNION ALL\n      SELECT\n          way,\n          name,\n          access,\n\
      \          amenity,\n          barrier,\n          highway,\n          historic,\n\
      \          man_made,\n          railway,\n          tags,\n          NULL AS\
      \ way_area\n        FROM planet_osm_point\n        WHERE way && !bbox!\n   \
      \   ) _\n    WHERE highway IN ('mini_roundabout')\n       OR railway IN ('level_crossing',\
      \ 'crossing')\n       OR amenity IN ('bench', 'waste_basket', 'waste_disposal')\n\
      \       OR historic IN ('wayside_cross', 'wayside_shrine')\n       OR man_made\
      \ IN ('cross')\n       OR barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate',\
      \ 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier',\
      \ 'full-height_turnstile', 'turnstile', 'kissing_gate')\n    ORDER BY\n    \
      \  CASE amenity\n        WHEN 'waste_basket' THEN 1\n        WHEN 'waste_disposal'\
      \ THEN 1\n        WHEN 'bench' THEN 2\n        WHEN NULL THEN 3\n      END DESC,\n\
      \      way_pixels DESC NULLS LAST\n  ) AS amenity_low_priority"
    type: postgis
  extent: *id001
  geometry: point
  id: amenity-low-priority
  properties:
    cache-features: true
    minzoom: 14
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    table: "(SELECT\n    way,\n    name,\n    COALESCE(\n      'highway_' || CASE\
      \ WHEN highway IN ('mini_roundabout') AND way_area IS NULL THEN highway END,\n\
      \      'railway_' || CASE WHEN railway IN ('level_crossing', 'crossing') AND\
      \ way_area IS NULL THEN railway END,\n      'amenity_' || CASE WHEN amenity\
      \ IN ('bench', 'waste_basket', 'waste_disposal') AND way_area IS NULL THEN amenity\
      \ END,\n      'historic_' || CASE WHEN historic IN ('wayside_cross', 'wayside_shrine')\
      \ AND way_area IS NULL THEN historic END,\n      'man_made_' || CASE WHEN man_made\
      \ IN ('cross') AND way_area IS NULL THEN man_made END,\n      'barrier_' ||\
      \ CASE WHEN barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate', 'block',\
      \ 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier', 'full-height_turnstile',\
      \ 'turnstile', 'kissing_gate') THEN barrier END\n    )  AS feature,\n    access,\n\
      \    way_area,\n    way_area/NULLIF(POW(!scale_denominator!*0.001*0.28,2),0)\
      \ AS way_pixels\n    FROM\n      (SELECT\n          ST_PointOnSurface(way) AS\
      \ way,\n          name,\n          access,\n          amenity,\n          barrier,\n\
      \          highway,\n          historic,\n          man_made,\n          railway,\n\
      \          tags,\n          way_area\n        FROM planet_osm_polygon\n    \
      \    WHERE way && !bbox!\n          AND way_area < 768000*POW(!scale_denominator!*0.001*0.28,2)\n\
      \      UNION ALL\n      SELECT\n          way,\n          name,\n          access,\n\
      \          amenity,\n          barrier,\n          highway,\n          historic,\n\
      \          man_made,\n          railway,\n          tags,\n          NULL AS\
      \ way_area\n        FROM planet_osm_point\n        WHERE way && !bbox!\n   \
      \   ) _\n    WHERE highway IN ('mini_roundabout')\n       OR railway IN ('level_crossing',\
      \ 'crossing')\n       OR amenity IN ('bench', 'waste_basket', 'waste_disposal')\n\
      \       OR historic IN ('wayside_cross', 'wayside_shrine')\n       OR man_made\
      \ IN ('cross')\n       OR barrier IN ('bollard', 'gate', 'lift_gate', 'swing_gate',\
      \ 'block', 'log', 'cattle_grid', 'stile', 'motorcycle_barrier', 'cycle_barrier',\
      \ 'full-height_turnstile', 'turnstile', 'kissing_gate')\n    ORDER BY\n    \
      \  CASE amenity\n        WHEN 'waste_basket' THEN 1\n        WHEN 'waste_disposal'\
      \ THEN 1\n        WHEN 'bench' THEN 2\n        WHEN NULL THEN 3\n      END DESC,\n\
      \      way_pixels DESC NULLS LAST\n  ) AS amenity_low_priority"
    type: postgis
  extent: *id001
  geometry: point
  id: text-low-priority
  properties:
    minzoom: 17
  srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
    +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
- Datasource:
    inline: agent,wkt\nhome,POINT(-0.196017 51.654277)\nshop,POINT(-0.203937 51.655884)
    type: csv
  extent: *id001
  geometry: point
  id: agents
  properties:
    minzoom: 17
  srs: +proj=latlong +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0
    +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over
  srs-name: '900913'
Stylesheet:
- style/style.mss
- style/fonts.mss
- style/shapefiles.mss
- style/landcover.mss
- style/water.mss
- style/water-features.mss
- style/road-colors-generated.mss
- style/roads.mss
- style/power.mss
- style/placenames.mss
- style/buildings.mss
- style/stations.mss
- style/amenity-points.mss
- style/ferry-routes.mss
- style/aerialways.mss
- style/admin.mss
- style/addressing.mss
- style/agents.mss
_parts:
  extents:
    extent: *id001
    srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0
      +k=1.0 +units=m +nadgrids=@null +wktext +no_defs +over
    srs-name: '900913'
  osm2pgsql:
    dbname: gis
    extent: -20037508,-20037508,20037508,20037508
    geometry_field: way
    key_field: ''
    type: postgis
bounds: *id001
center:
- 0
- 0
- 4
description: A general-purpose OpenStreetMap mapnik style, in CartoCSS
format: png
interactivity: false
maxzoom: 22
metatile: 2
minzoom: 0
name: OpenStreetMap Carto
scale: 1
srs: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0.0 +k=1.0
  +units=m +nadgrids=@null +wktext +no_defs +over
